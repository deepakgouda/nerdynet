<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://deepakgouda.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://deepakgouda.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-06T05:16:01+00:00</updated><id>https://deepakgouda.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Untangling Prefix Delegations by Internet Registries</title><link href="https://deepakgouda.github.io/blog/2024/whois/" rel="alternate" type="text/html" title="Untangling Prefix Delegations by Internet Registries"/><published>2024-08-03T21:01:00+00:00</published><updated>2024-08-03T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2024/whois</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2024/whois/"><![CDATA[<style>.code-container{position:relative;margin-bottom:1em}.code-caption{background-color:rgba(240,240,240,0.8);color:rgba(0,0,0,0.7);padding:5px 10px;font-style:italic;border-bottom:1px solid rgba(204,204,204,0.5);font-size:.7em;text-align:left}@media(prefers-color-scheme:light){.code-caption{background-color:rgba(42,42,42,0.8);color:rgba(224,224,224,0.9);border-bottom:1px solid rgba(68,68,68,0.5)}}.table-caption{text-align:center;font-size:.75em;margin-top:.5em;color:#666}</style> <h2 id="introduction">Introduction</h2> <p>The Internet Assigned Numbers Authority (IANA) is responsible for global IP address allocation among the five Regional Internet Registries (RIRs). The five RIRs manage the resources they have been allocated by IANA and further assign resources to customer organizations. The customer organizations can be National Internet Registries (NIRs), Local Internet Registries (LIRs), Internet Service Providers (ISPs) or end-user organizations.</p> <p>The five RIRs operate in different regions of the world and autonomously decide the delegation hierarchy and usage terms of the IP address blocks they delegate. These terms of usage can be inferred from the WHOIS database, which records registration information of Internet Resources and is considered to be the authoritative source of information since this dataset is managed by network operators and resource holders. In the WHOIS dataset, RIRs use the <code class="language-plaintext highlighter-rouge">status</code> or <code class="language-plaintext highlighter-rouge">NetType</code> attribute to indicate the delegation status. RIRs use different values for these fields and in this blog, we decode the keywords used and the delegation hierarchy of each RIR.</p> <p><em>Note :</em> In this post we indicate LIRs as ISPs for the sake of brevity. LIRs are generally ISPs but all ISPs are not LIRs. LIRs get address blocks directly from the RIRs and can further delegate the address blocks to their customers like ISPs. ISPs are organizations that provide Internet services to customers and can get address blocks from LIRs or other ISPs.</p> <h2 id="data">Data</h2> <p>In this study we use the bulk WHOIS data from five RIRs. WHOIS data contains information about IP address blocks, their delegation status, the organization who has been delegated the address space, Autonomous System Numbers, domain names, and even contact details of network administrators. This data is publicly available and can be accessed through the WHOIS protocol <d-cite key="rfc3912"></d-cite>.</p> <p>WHOIS data consists of several types of records such as <code class="language-plaintext highlighter-rouge">inetnum</code>, <code class="language-plaintext highlighter-rouge">inet6num</code>, <code class="language-plaintext highlighter-rouge">aut-num</code>, <code class="language-plaintext highlighter-rouge">domain</code>, <code class="language-plaintext highlighter-rouge">organisation</code>, <code class="language-plaintext highlighter-rouge">person</code>, <code class="language-plaintext highlighter-rouge">route</code> and <code class="language-plaintext highlighter-rouge">route6</code>. Each record serves a different purpose. For instance, the <code class="language-plaintext highlighter-rouge">inetnum</code> record contains information about an IPv4 address block, the <code class="language-plaintext highlighter-rouge">aut-num</code> record contains information about an Autonomous System Number(ASN), and the <code class="language-plaintext highlighter-rouge">organisation</code> record contains information about an organization registered with an RIR. In this study, we investigate the <code class="language-plaintext highlighter-rouge">inetnum</code> and <code class="language-plaintext highlighter-rouge">inet6num</code> records to infer the delegation status of the IPv4 and IPv6 address blocks respectively. Note that <code class="language-plaintext highlighter-rouge">route</code> and <code class="language-plaintext highlighter-rouge">route6</code> records also contain information about IPv4 and IPv6 prefixes, but this object serves to record the routing policies of an organization and hence, it is not used in this study.</p> <hr/> <h2 id="delegation-status-attributes-and-values">Delegation Status Attributes and Values</h2> <p>Different RIRs use different keywords to indicate the delegation status of an IP address block. In this section, we decode the keywords used by each RIR and the delegation hierarchy. The delegation hierarchy is not explicitly mentioned in the WHOIS data, but we infer the hierarchy based on the keywords used by the RIRs. The hierarchy is represented as a directed acyclic graph where the root node represents the IANA and the leaf nodes represent the end-user organizations. The edges represent the delegation of an IP address block from one organization to another. The hierarchy is inferred based on the delegation status of the IP address blocks and the organization that has been delegated the address block.</p> <p>Note that all RIRs do not provide a documentation of the keywords they use to indicate the delegation status of an IP address block. The keywords and the indicated delegation status used by each RIR are listed below. Check the <a href="#appendix">Appendix</a> for a sample WHOIS data from each RIR.</p> <h3 id="arin">ARIN</h3> <p>ARIN uses the <code class="language-plaintext highlighter-rouge">NetType</code> key to indicate the delegation status of an IP address block. The <code class="language-plaintext highlighter-rouge">NetType</code> key can have the values - <em>ALLOCATION</em>, <em>ASSIGNMENT</em>, <em>REALLOCATION</em>, <em>REASSIGNMENT</em>, <em>RIR</em> and <em>RESERVED</em>. The values indicate the following:</p> <ul> <li><strong>ALLOCATION</strong> : IP address block has been directly allocated by ARIN to an LIR or ISP. Since it is a direct allocation by ARIN, the address block is portable <em>i.e.</em> if the organization changes its upstream provider, it can retain the address block <d-cite key="arin_portability"></d-cite>.</li> <li><strong>REALLOCATION</strong> : IP address block has been reallocated by the LIR or ISP to a downstream customer. The address block is not portable and the downstream entity must return the address space when changing providers.</li> <li><strong>ASSIGNMENT</strong> : IP address block has been reserved by IANA for special purposes<d-footnote>These address blocks are more commonly known as bogon prefixes. The complete list can be found <a href="https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml">here</a>.</d-footnote>.</li> <li><strong>REASSIGNMENT</strong> : IP address block has been reassigned to an end-user organization and cannot be further delegated. The organization must use the address block within its own infrastructure. The address block is not portable and the end-user must return the address space when changing providers.</li> <li><strong>RIR</strong> : IP address block has been delegated to either self or other RIRs by ARIN.</li> <li><strong>RESERVED</strong> : IP address block has been reserved by IANA.</li> </ul> <p>ARIN consists of a simple hierarchy where the IP address blocks are directly allocated by ARIN to ISPs. The ISPs can further reallocate the address blocks to downstream customers or reassign them to end users. The end users cannot further delegate the address blocks. ARIN consists of $3.1M$ IPv4 ($300K$ IPv6) records and $96.0$% ($93.3$%) of these records are assignments to the end users. Note that ISPs often have one WHOIS record for a large address block and they create several records for the smaller address blocks they delegte to their customers. <a id="table-1" href="#table-1">Table 1</a> summarizes the distribution of the delegation status of ARIN WHOIS records.</p> <table> <thead> <tr> <th style="text-align: left">ARIN</th> <th style="text-align: right">inetnum</th> <th style="text-align: right">inet6num</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATION</td> <td style="text-align: right">2.3%</td> <td style="text-align: right">3.23%</td> </tr> <tr> <td style="text-align: left">ASSIGNMENT</td> <td style="text-align: right">0.0%</td> <td style="text-align: right">0.0%</td> </tr> <tr> <td style="text-align: left">REASSIGNMENT</td> <td style="text-align: right">96.04%</td> <td style="text-align: right">93.28%</td> </tr> <tr> <td style="text-align: left">RIR</td> <td style="text-align: right">0.24%</td> <td style="text-align: right">0.01%</td> </tr> <tr> <td style="text-align: left">REALLOCATION</td> <td style="text-align: right">1.43%</td> <td style="text-align: right">3.47%</td> </tr> <tr> <td style="text-align: left">RESERVED</td> <td style="text-align: right">0.0%</td> <td style="text-align: right">0.0%</td> </tr> <tr> <td style="text-align: left"><strong>Total records</strong></td> <td style="text-align: right"><strong>3,158,560</strong></td> <td style="text-align: right"><strong>299,535</strong></td> </tr> </tbody> </table> <p class="table-caption"><em>Table 1 : Distribution of IP address delegation types for IPv4 (inetnum) and IPv6 (inet6num) records in ARIN</em></p> <h3 id="lacnic">LACNIC</h3> <p>LACNIC indicates the delegation type in the <code class="language-plaintext highlighter-rouge">status</code> key of its WHOIS data. The <code class="language-plaintext highlighter-rouge">status</code> key can have the values - <em>ALLOCATED</em>, <em>REALLOCATED</em>, <em>ASSIGNED</em> and <em>REASSIGNED</em>. Similar to the keywords used by ARIN, the status values indicate the following:</p> <ul> <li><strong>ALLOCATED</strong> : IP address block has been directly allocated by LACNIC to an LIR or ISP.</li> <li><strong>REALLOCATED</strong> : IP address block has been reallocated by the LIR or ISP to a downstream customer.</li> <li><strong>ASSIGNED</strong> : IP address block has been assigned directly by the RIR to an organization and can be reassigned to an end-user organization.</li> <li><strong>REASSIGNED</strong> : IP address block has been reassigned to an end-user organization and cannot be further delegated. The organization must use the address block within its own infrastructure.</li> </ul> <p>The LACNIC hierarchy is similar to the ARIN hierarchy. The IP address blocks are directly allocated by LACNIC to ISPs. The ISPs can further reallocate the address blocks to downstream customers or reassign them to end users. LACNIC consists of $466K$ IPv4 and $28K$ IPv6 records. $71.86$% of the IPv4 records are reallocations by the ISPs. in contrast, the IPv6 delegations are have a bimodal distribution where $40.0$% records are allocations and $41.0$% records are reallocations. Due to the generous availability of IPv6 addresses, LACNIC performs numerous direct allocations to organizations. The following table summarizes the distribution of the delegation status of LACNIC WHOIS records. Refer to <a id="table-2" href="#table-2">Table 2</a> for the distribution of delegation types in LACNIC.</p> <table> <thead> <tr> <th style="text-align: left">LACNIC</th> <th style="text-align: right">inetnum</th> <th style="text-align: right">inet6num</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ASSIGNED</td> <td style="text-align: right">0.55%</td> <td style="text-align: right">5.57%</td> </tr> <tr> <td style="text-align: left">ALLOCATED</td> <td style="text-align: right">3.61%</td> <td style="text-align: right">40.0%</td> </tr> <tr> <td style="text-align: left">REALLOCATED</td> <td style="text-align: right">71.86%</td> <td style="text-align: right">41.01%</td> </tr> <tr> <td style="text-align: left">REASSIGNED</td> <td style="text-align: right">23.99%</td> <td style="text-align: right">13.42%</td> </tr> <tr> <td style="text-align: left"><strong>Total records</strong></td> <td style="text-align: right"><strong>466,256</strong></td> <td style="text-align: right"><strong>28,022</strong></td> </tr> </tbody> </table> <p class="table-caption"><em>Table 2 : Distribution of IP address delegation types for IPv4 (inetnum) and IPv6 (inet6num) records in LACNIC</em></p> <h3 id="afrinic-and-ripe">AFRINIC and RIPE</h3> <p>AFRINIC and RIPE use the same set of values to indicate the delegation status of an IP address block. They use the <code class="language-plaintext highlighter-rouge">status</code> field to indicate the delegation status of an IP address block. The <code class="language-plaintext highlighter-rouge">status</code> field can have values such as <em>ALLOCATED PA</em>, <em>ASSIGNED PI</em>, <em>ASSIGNED PA</em> and <em>SUB-ALLOCATED PA</em>. We first define some of the common terminologies used by AFRINIC and RIPE.</p> <h4 id="terminologies">Terminologies</h4> <ul> <li> <p><strong>Provider Aggregatable (PA)</strong> : These address blocks are allocated to ISPs and are designed to be aggregated while making route announcements on BGP. ISPs can sub-allocate or assign smaller blocks to their customers and are responsible for maintaining the registration information with the RIRs. These address blocks are considered non-portable since the customers have to relinquish the address block when changing providers<d-cite key="ripe_pa_vs_pi,afrinic_whois_status_doc"></d-cite>.</p> </li> <li> <p><strong>Provider Independent (PI)</strong> : These address blocks are assigned to an end-user organization directly by an RIR and allow the holder to retain the allocation independent of their upstream provider (thus, considered portable). While these allocations offer more flexibility to the end-user, it increases the load on the global routing table since the address blocks have to be announced individually on BGP and cannot be aggregated with other PA address blocks. These address blocks are increasingly rare in IPv4 due to the depletion of IPv4 addresses and the increased pressure for routing aggregation. RIPE has stopped issuing PI IPv4 address blocks but can still issue PI IPv6 address blocks.</p> </li> <li> <p><strong>Sub-allocation</strong> - Sub-allocations allow an ISP to distribute smaller blocks of its non-portable address space to downstream entities who can make further assignments to end-users. ISPs holding <em>ALLOCATED UNSPECIFIED</em> allocations may be able to convert them to PA allocations if there are no <em>ASSIGNED PI</em> networks within it (more on these status values in <a href="#description">next subsection</a>). The ISPs are responsible for maintaining the registration information with the RIRs. They are also recommended to ensure that the downstream customers return the assigned address space when chaging their service providers<d-cite key="ripe_whois_status_doc"></d-cite>.</p> </li> </ul> <h4 id="description">Description</h4> <p>The most common values used by AFRNIC and RIPE indicate the following <d-footnote>The complete documentation by RIPE can be found <a href="https://www.ripe.net/publications/docs/ripe-826/#70-types-of-address-space">here</a>.</d-footnote>:</p> <ul> <li><strong>ALLOCATED PA</strong> : IP address block has been directly allocated by the RIR to an ISP. It can be further sub-allocated or assigned to downstream customers, but the downstream entity must return the address space when changing providers.</li> <li><strong>ASSIGNED PI</strong> : IP address block has been assigned by the RIR to an end-user organization. The end-user can change upstream providers without returning the address space.</li> <li><strong>SUB-ALLOCATED PA</strong> : IP address block has been sub-allocated by an ISP to a downstream customer. The downstream customer can further assign address blocks to its own customers. The address block must be returned to the ISP when changing providers.</li> <li><strong>ASSIGNED PA</strong> : IP address block has been assigned by an network provider to an end-user organization and cannot be further delegated.</li> <li><strong>LEGACY</strong> : IP address block was assigned to an organization prior to the formation of the RIRs. These address blocks are not subject to the same policies as the other address blocks and are not managed by the RIRs.</li> <li><strong>LIR-PARTITIONED PA</strong> : LIRs manage this block within their organization. This address block is considered not used and more specific address blocks should be registered.</li> </ul> <p>Some of the values found only in <code class="language-plaintext highlighter-rouge">inet6num</code> i.e. IPv6 address blocks are <d-cite key="ripe_ipv6_doc_1"></d-cite>:</p> <ul> <li><strong>ALLOCATED-BY-RIR</strong> : IP address block has been directly allocated by the RIR to an ISP.</li> <li><strong>ALLOCATED-BY-LIR</strong> : This status value is equivalent to the <em>SUB-ALLOCATED PA</em> attribute. IP address block has been allocated by an LIR to sub-ordinate ISPs.</li> <li><strong>AGGREGATED-BY-LIR</strong> : IP address block has been aggregated by an LIR from smaller assignments to multiple customers. The smaller assignments must be of the same size and the size is mentioned in the <code class="language-plaintext highlighter-rouge">assignment-size</code> attribute of the record<d-cite key="ripe_ipv6_doc_1,ripe_ipv6_doc_2"></d-cite>.</li> <li><strong>ASSIGNED</strong> : IP address block has been assigned by an LIR to self or an end-user organization.</li> </ul> <p><a href="#table-3">Table 3</a> offers a concise description of the most common delegation status values and their characteristics in AFRINIC and RIPE.</p> <table id="table-3"> <thead> <tr> <th><strong>Status</strong></th> <th style="text-align: center"><strong>Allocation made by</strong></th> <th style="text-align: center"><strong>Allocation made to</strong></th> <th style="text-align: center"><strong>Allocation can be retained?</strong></th> <th style="text-align: center"><strong>Further delegation permitted?</strong></th> </tr> </thead> <tbody> <tr> <td><strong>ALLOCATED PA</strong></td> <td style="text-align: center">RIR</td> <td style="text-align: center">LIR</td> <td style="text-align: center">-</td> <td style="text-align: center">Yes</td> </tr> <tr> <td><strong>SUB-ALLOCATED PA</strong></td> <td style="text-align: center">LIR</td> <td style="text-align: center">Network Operators</td> <td style="text-align: center">No</td> <td style="text-align: center">Yes</td> </tr> <tr> <td><strong>ASSIGNED PA</strong></td> <td style="text-align: center">LIR</td> <td style="text-align: center">End user/Self</td> <td style="text-align: center">No</td> <td style="text-align: center">No</td> </tr> <tr> <td><strong>ASSIGNED PI</strong></td> <td style="text-align: center">RIR</td> <td style="text-align: center">End user</td> <td style="text-align: center">Yes</td> <td style="text-align: center">No</td> </tr> </tbody> </table> <p class="table-caption"><em>Table 3 : Delegation types and usage terms in AFRINIC and RIPE</em></p> <p><a href="#figure-1">Fig 1</a> and <a href="#figure-2">Fig 2</a> show the delegation hierarchy of IPv4 and IPv6 records respectively. AFRINIC consists of $154K$ IPv4 and $32K$ IPv6 records while RIPE consists of $4.3M$ IPv4 and $884K$ IPv6 records. Similar to ARIN, $96.4$% IPv4, $95.7$% IPv6 records in AFRINIC and $94.2$% IPv4, $87.6$% IPv6 RIPE records are non-portable assignments to end users. Refer to <a href="#table-4">Table 4</a> and <a href="#table-5">Table 5</a> for the distribution of delegation types in AFRINIC and RIPE.</p> <div class="col-sm mt-3 mt-md-0" id="figure-1"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v4-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v4-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v4-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v4.png" data-zoomable=""/> </picture> </figure> </div> <p class="table-caption"><em>AFRINIC and RIPE IPv4 delegation hierarchy (simplified)</em></p> <div class="col-sm mt-3 mt-md-0" id="figure-2"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v6-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v6-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v6-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/whois-delegation/WHOIS-Delegation-Status-Blog-v6.png" data-zoomable=""/> </picture> </figure> </div> <p class="table-caption"><em>RIPE IPv6 delegation hierarchy (simplified)</em></p> <table id="table-4"> <thead> <tr> <th style="text-align: left">AFRINIC</th> <th style="text-align: right">inetnum</th> <th style="text-align: right">inet6num</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED PA</td> <td style="text-align: right">2.19%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">SUB-ALLOCATED PA</td> <td style="text-align: right">0.23%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ASSIGNED PA</td> <td style="text-align: right">96.41%</td> <td style="text-align: right">95.67%</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">1.06%</td> <td style="text-align: right">1.02%</td> </tr> <tr> <td style="text-align: left">ALLOCATED UNSPECIFIED</td> <td style="text-align: right">0.1%</td> <td style="text-align: right">0.01%</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">0.01%</td> <td style="text-align: right">0.01%</td> </tr> <tr> <td style="text-align: left">POLICY-RESERVED</td> <td style="text-align: right">0.0%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ALLOCATED-BY-RIR</td> <td style="text-align: right">-</td> <td style="text-align: right">3.29%</td> </tr> <tr> <td style="text-align: left"><strong>Total records</strong></td> <td style="text-align: right"><strong>153,711</strong></td> <td style="text-align: right"><strong>32,162</strong></td> </tr> </tbody> </table> <p class="table-caption"><em>Table 4 : Distribution of IP address delegation types for IPv4 (inetnum) and IPv6 (inet6num) records in AFRINIC</em></p> <table id="table-5"> <thead> <tr> <th style="text-align: left">RIPE</th> <th style="text-align: right">inetnum</th> <th style="text-align: right">inet6num</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED PA</td> <td style="text-align: right">1.55%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">SUB-ALLOCATED PA</td> <td style="text-align: right">0.27%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ASSIGNED PA</td> <td style="text-align: right">94.21%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ALLOCATED-ASSIGNED PA</td> <td style="text-align: right">0.0%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">0.47%</td> <td style="text-align: right">0.43%</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">0.0%</td> <td style="text-align: right">0.01%</td> </tr> <tr> <td style="text-align: left">ASSIGNED</td> <td style="text-align: right">-</td> <td style="text-align: right">87.64%</td> </tr> <tr> <td style="text-align: left">ALLOCATED-BY-RIR</td> <td style="text-align: right">-</td> <td style="text-align: right">2.56%</td> </tr> <tr> <td style="text-align: left">ALLOCATED-BY-LIR</td> <td style="text-align: right">-</td> <td style="text-align: right">2.07%</td> </tr> <tr> <td style="text-align: left">AGGREGATED-BY-LIR</td> <td style="text-align: right">-</td> <td style="text-align: right">7.29%</td> </tr> <tr> <td style="text-align: left">LIR-PARTITIONED PA</td> <td style="text-align: right">0.31%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">ALLOCATED UNSPECIFIED</td> <td style="text-align: right">0.3%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left">LEGACY</td> <td style="text-align: right">2.9%</td> <td style="text-align: right">-</td> </tr> <tr> <td style="text-align: left"><strong>Total records</strong></td> <td style="text-align: right"><strong>4,325,375</strong></td> <td style="text-align: right"><strong>884,387</strong></td> </tr> </tbody> </table> <p class="table-caption"><em>Table 5 : Distribution of IP address delegation types for IPv4 (inetnum) and IPv6 (inet6num) records in RIPE</em></p> <h3 id="apnic">APNIC</h3> <p>APNIC uses the <code class="language-plaintext highlighter-rouge">status</code> field to indicate the delegation status of an IP address block. The <code class="language-plaintext highlighter-rouge">status</code> field can have the values - <em>ALLOCATED PORTABLE</em>, <em>ALLOCATED NON-PORTABLE</em>, <em>ASSIGNED PORTABLE</em> and <em>ASSIGNED NON-PORTABLE</em>. The values indicate the following <d-cite key="apnic_whois_status_doc">&lt;/d-key&gt; :</d-cite></p> <ul> <li><strong>ALLOCATED PORTABLE</strong> : IP address block has been directly allocated by APNIC to an ISP and can be further sub-allocated or assigned to downstream customers.</li> <li><strong>ALLOCATED NON-PORTABLE</strong> : IP address block has been directly allocated by an ISP to their customers. The address block has to be returned to the provider when changing the upstream provider.</li> <li><strong>ASSIGNED PORTABLE</strong> : IP address block has been assigned by APNIC to small-multihoming organizations or IXPs. These assignments can be retained by the customer while changing the network provider.</li> <li><strong>ASSIGNED NON-PORTABLE</strong> : IP address block has been assigned by an ISP to an end-user organization and cannot be further delegated. The address block has to be returned to the provider when changing the upstream provider.</li> </ul> <p>APNIC consists of $1.26M$ IPv4 and $104K$ IPv6 records. $88.1$% IPv4 and $73.7$% IPv6 records are non-portable assignments to end users. Refer to <a href="#table-6">Table 6</a> for the distribution of delegation types in APNIC.</p> <table id="table-6"> <thead> <tr> <th style="text-align: left">APNIC</th> <th style="text-align: right">inetnum</th> <th style="text-align: right">inet6num</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED PORTABLE</td> <td style="text-align: right">3.31%</td> <td style="text-align: right">8.52%</td> </tr> <tr> <td style="text-align: left">ALLOCATED NON-PORTABLE</td> <td style="text-align: right">7.52%</td> <td style="text-align: right">11.9%</td> </tr> <tr> <td style="text-align: left">ASSIGNED PORTABLE</td> <td style="text-align: right">1.06%</td> <td style="text-align: right">5.9%</td> </tr> <tr> <td style="text-align: left">ASSIGNED NON-PORTABLE</td> <td style="text-align: right">88.1%</td> <td style="text-align: right">73.68%</td> </tr> <tr> <td style="text-align: left"><strong>Total records</strong></td> <td style="text-align: right"><strong>1,263,350</strong></td> <td style="text-align: right"><strong>104,028</strong></td> </tr> </tbody> </table> <p class="table-caption"><em>Table 6 : Distribution of IP address delegation types for IPv4 (inetnum) and IPv6 (inet6num) records in APNIC</em></p> <h2 id="applications">Applications</h2> <p>The delegation status of an IP address block reveals several critical information about an address block. We can build the complete delegation tree of an address block to understand how the address block is being used on the Internet. The portability status of an address block can inform us if the address block has been potentially used by multiple organizations. We can also determine if routes to the block can be aggregated with other addresses, which can help us optimize the size of routing tables on BGP. This data can also aid us in understanding the fragmentation of address blocks which again directly impacts BGP routing table size, resource certificates in the Public Key Infrastructure (PKI). The delegation hierarchy also reveals business operations of organizations <em>i.e.</em> which organizations are ISPs, which organizations sub-allocate address spaces to others, and which organizations are end-users. This information can be used to understand the business relationships between organizations and the structure of the Internet.</p> <h3 id="who-can-issue-rpki-certificates">Who can issue RPKI certificates?</h3> <p>In this section we use the delegation status to understand which organizations issue RPKI certificates for an IP address block. RPKI certificates or Route Origin Authorizations (ROAs) are used to validate the origin of a route announcement on BGP. The RPKI certificates can be issued by the entity which has authoritative control over the Internet resource. Due to the complex and distinct delegation hierarchy across the RIRs, finding the entity which can issue RPKI certificates for an IP address block can be challenging.</p> <p>If an IP address block was directly allocated to Org A and it further sub-allocates a part of the block to Org B, who can issue RPKI certificates for the smaller address block - Org A or Org B? We can answer to this question by studying the delegation status of the address blocks. <a href="#table-7">Table 7</a> summarizes the delegation status of an IP address block and the organization that can issue ROAs for the address block.</p> <h4 id="methodology">Methodology</h4> <p>We extract resource certificates from the RPKI repository and match the IP address blocks in the certificates with the WHOIS data. We then infer the delegation status of the address block and the organization that can issue ROAs for the address block. We summarize the results in <a href="#table-7">Table 7</a>.</p> <p>We source the RPKI data from the certificate archive created using the <a href="https://rpki-client.org">RPKI Client tool</a>. The <a href="https://console.rpki-client.org">RPKI console</a> can also be used to navigate the certificate archive on a web browser.</p> <h4 id="results">Results</h4> <table id="table-7"> <thead> <tr> <th><strong>RIR</strong></th> <th style="text-align: center"><strong>IPv4</strong></th> <th style="text-align: center"><strong>IPv6</strong></th> </tr> </thead> <tbody> <tr> <td><strong>ARIN</strong></td> <td style="text-align: center">ALLOCATED</td> <td style="text-align: center">ALLOCATED</td> </tr> <tr> <td><strong>LACNIC</strong></td> <td style="text-align: center">ALLOCATED, ASSIGNED</td> <td style="text-align: center">ALLOCATED, ASSIGNED</td> </tr> <tr> <td><strong>RIPE</strong></td> <td style="text-align: center">ALLOCATED PA, ASSIGNED PI, LEGACY</td> <td style="text-align: center">ALLOCATED-BY-RIR, ASSIGNED PI</td> </tr> <tr> <td><strong>AFRINIC</strong></td> <td style="text-align: center">ALLOCATED PA, ASSIGNED PI</td> <td style="text-align: center">ALLOCATED-BY-RIR, ASSIGNED PI</td> </tr> <tr> <td><strong>APNIC</strong></td> <td style="text-align: center">ALLOCATED PORTABLE, ASSIGNED PORTABLE</td> <td style="text-align: center">ALLOCATED PORTABLE, ASSIGNED PORTABLE</td> </tr> </tbody> </table> <p class="table-caption"><em>Table 7 : Which delegation status indicates the organization has the authority to issue ROAs for the address block?</em></p> <p><strong>Note</strong> : In RIPE, sub-delegations from a <em>LEGACY</em> address block are also considered <em>LEGACY</em>. But the organization holding the parent address block can issue ROAs for the sub-delegated address block.</p> <h2 id="conclusion">Conclusion</h2> <p>In this blog we decoded the delegation status values used by the RIRs in the WHOIS data. We inferred the delegation hierarchy of the RIRs and understood the delegation status of the IP address blocks. The delegation status values can be used to understand the hierarchy of the Internet resources and the business relationships between organizations. The delegation status values can also be used to understand the portability of an address block and the aggregation of routes on BGP. We also used the delegation status values to understand which organizations can issue RPKI certificates for an IP address block.</p> <hr/> <p>If you found this useful, please cite this as:</p> <blockquote> <p>Gouda, Deepak (Aug 2024). Untangling Prefix Delegations by Internet Registries. https://deepakgouda.github.io.</p> </blockquote> <p>or as a BibTeX entry:</p> <div class="language-bibtex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">@article</span><span class="p">{</span><span class="nl">deepak2024untangling-prefix-delegations</span><span class="p">,</span>
  <span class="na">title</span>   <span class="p">=</span> <span class="s">{Untangling Prefix Delegations by Internet Registries}</span><span class="p">,</span>
  <span class="na">author</span>  <span class="p">=</span> <span class="s">{Gouda, Deepak}</span><span class="p">,</span>
  <span class="na">year</span>    <span class="p">=</span> <span class="s">{2024}</span><span class="p">,</span>
  <span class="na">month</span>   <span class="p">=</span> <span class="s">{Aug}</span><span class="p">,</span>
  <span class="na">url</span>     <span class="p">=</span> <span class="s">{https://deepakgouda.github.io/blog/2024/whois/}</span>
<span class="p">}</span>
</code></pre></div></div> <h2 id="appendix">Appendix</h2> <h3 id="whois-data-samples">WHOIS Data Samples</h3> <details><summary>ARIN WHOIS data sample</summary> <div class="code-container"> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">    <span class="nx">NetHandle</span><span class="p">:</span>      <span class="nx">NET</span><span class="o">-</span><span class="mi">220</span><span class="o">-</span><span class="mi">158</span><span class="o">-</span><span class="mi">32</span><span class="o">-</span><span class="mi">0</span><span class="o">-</span><span class="mi">1</span>
    <span class="nx">OrgID</span><span class="p">:</span>          <span class="nx">ORACLE</span><span class="o">-</span><span class="mi">4</span>
    <span class="nx">Parent</span><span class="p">:</span>         <span class="nx">NET</span><span class="o">-</span><span class="mi">220</span><span class="o">-</span><span class="mi">0</span><span class="o">-</span><span class="mi">0</span><span class="o">-</span><span class="mi">0</span><span class="o">-</span><span class="mi">1</span>
    <span class="nx">NetName</span><span class="p">:</span>        <span class="nx">ORACLE</span><span class="o">-</span><span class="mi">4</span>
    <span class="nx">NetRange</span><span class="p">:</span>       <span class="mf">220.158</span><span class="p">.</span><span class="mf">32.0</span> <span class="o">-</span> <span class="mf">220.158</span><span class="p">.</span><span class="mf">47.255</span>
    <span class="nx">NetType</span><span class="p">:</span>        <span class="nx">allocation</span>
    <span class="nx">RegDate</span><span class="p">:</span>        <span class="mi">2024</span><span class="o">-</span><span class="mi">06</span><span class="o">-</span><span class="mi">26</span>
    <span class="nx">Updated</span><span class="p">:</span>        <span class="mi">2024</span><span class="o">-</span><span class="mi">06</span><span class="o">-</span><span class="mi">26</span>
    <span class="nx">Source</span><span class="p">:</span>         <span class="nx">ARIN</span>
  </code></pre></figure> </div> </details> <details><summary>LACNIC WHOIS data sample</summary> <div class="code-container"> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">        <span class="nx">inetnum</span><span class="p">:</span>    <span class="mf">24.152</span><span class="p">.</span><span class="mi">4</span><span class="o">/</span><span class="mi">22</span>
        <span class="nx">status</span><span class="p">:</span>     <span class="nx">allocated</span>
        <span class="nx">owner</span><span class="p">:</span>      <span class="nx">JNET</span> <span class="nx">TELECOM</span>
        <span class="nx">city</span><span class="p">:</span>       <span class="nx">Manaus</span>
        <span class="nx">country</span><span class="p">:</span>    <span class="nx">BR</span>
        <span class="nx">owner</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>    <span class="nx">JLB42</span>
        <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>     <span class="nx">JLB42</span>
        <span class="nx">abuse</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>    <span class="nx">JLB42</span>
        <span class="nx">inetrev</span><span class="p">:</span>    <span class="mf">24.152</span><span class="p">.</span><span class="mi">4</span><span class="o">/</span><span class="mi">22</span>
        <span class="nx">nserver</span><span class="p">:</span>    <span class="nx">NS1</span><span class="p">.</span><span class="nx">JNETTELECOM</span><span class="o">-</span><span class="nx">AM</span><span class="p">.</span><span class="nx">COM</span><span class="p">.</span><span class="nx">BR</span>
        <span class="nx">nserver</span><span class="p">:</span>    <span class="nx">NS2</span><span class="p">.</span><span class="nx">JNETTELECOM</span><span class="o">-</span><span class="nx">AM</span><span class="p">.</span><span class="nx">COM</span><span class="p">.</span><span class="nx">BR</span>
        <span class="nx">created</span><span class="p">:</span>    <span class="mi">2020</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">12</span>
        <span class="nx">changed</span><span class="p">:</span>    <span class="mi">2020</span><span class="o">-</span><span class="mi">03</span><span class="o">-</span><span class="mi">12</span>
        <span class="nx">source</span><span class="p">:</span>     <span class="nx">LACNIC</span>
    </code></pre></figure> </div> </details> <details><summary>AFRINIC WHOIS data sample</summary> <div class="code-container"> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">        <span class="nx">inetnum</span><span class="p">:</span>        <span class="mf">196.202</span><span class="p">.</span><span class="mf">192.0</span> <span class="o">-</span> <span class="mf">196.202</span><span class="p">.</span><span class="mf">223.255</span>
        <span class="nx">netname</span><span class="p">:</span>        <span class="nx">KE</span><span class="o">-</span><span class="nx">KPTC</span><span class="o">-</span><span class="mi">20041025</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">PROVIDER</span> <span class="nx">Local</span> <span class="nx">Registry</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">Kenyan</span> <span class="nx">Post</span> <span class="o">&amp;</span> <span class="nx">Telecommunications</span>
        <span class="nx">country</span><span class="p">:</span>        <span class="nx">KE</span>
        <span class="nx">admin</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>        <span class="nx">LO8</span><span class="o">-</span><span class="nx">AFRINIC</span>
        <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>         <span class="nx">MKN1</span><span class="o">-</span><span class="nx">AFRINIC</span>
        <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>         <span class="nx">GKN1</span><span class="o">-</span><span class="nx">AFRINIC</span>
        <span class="nx">org</span><span class="p">:</span>            <span class="nx">ORG</span><span class="o">-</span><span class="nx">KPTC1</span><span class="o">-</span><span class="nx">AFRINIC</span>
        <span class="nx">status</span><span class="p">:</span>         <span class="nx">ALLOCATED</span> <span class="nx">PA</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">by</span><span class="p">:</span>         <span class="nx">AFRINIC</span><span class="o">-</span><span class="nx">HM</span><span class="o">-</span><span class="nx">MNT</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">lower</span><span class="p">:</span>      <span class="nx">KPTC</span><span class="o">-</span><span class="nx">MNT</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">domains</span><span class="p">:</span>    <span class="nx">KPTC</span><span class="o">-</span><span class="nx">MNT</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="nx">data</span> <span class="nx">has</span> <span class="nx">been</span> <span class="nx">transferred</span> <span class="k">from</span> <span class="nx">RIPE</span> <span class="nx">Whois</span> <span class="nx">Database</span> <span class="mi">20050221</span>
        <span class="nx">notify</span><span class="p">:</span>         <span class="o">***</span><span class="p">@</span><span class="nd">orange</span><span class="o">-</span><span class="nx">tkl</span><span class="p">.</span><span class="nx">co</span><span class="p">.</span><span class="nx">ke</span>
        <span class="nx">notify</span><span class="p">:</span>         <span class="o">***</span><span class="p">@</span><span class="nd">orange</span><span class="o">-</span><span class="nx">tkl</span><span class="p">.</span><span class="nx">co</span><span class="p">.</span><span class="nx">ke</span>
        <span class="nx">notify</span><span class="p">:</span>         <span class="o">***</span><span class="p">@</span><span class="nd">orange</span><span class="o">-</span><span class="nx">tkl</span><span class="p">.</span><span class="nx">co</span><span class="p">.</span><span class="nx">ke</span>
        <span class="nx">changed</span><span class="p">:</span>        <span class="o">***</span><span class="p">@</span><span class="nd">ripe</span><span class="p">.</span><span class="nx">net</span> <span class="mi">20041025</span>
        <span class="nx">changed</span><span class="p">:</span>        <span class="o">***</span><span class="p">@</span><span class="nd">afrinic</span><span class="p">.</span><span class="nx">net</span> <span class="mi">20050205</span>
        <span class="nx">changed</span><span class="p">:</span>        <span class="o">***</span><span class="p">@</span><span class="nd">afrinic</span><span class="p">.</span><span class="nx">net</span> <span class="mi">20121214</span>
        <span class="nx">source</span><span class="p">:</span>         <span class="nx">AFRINIC</span>
    </code></pre></figure> </div> </details> <details><summary>APNIC WHOIS data sample</summary> <div class="code-container"> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">        <span class="nx">inetnum</span><span class="p">:</span>        <span class="mf">202.6</span><span class="p">.</span><span class="mf">91.0</span> <span class="o">-</span> <span class="mf">202.6</span><span class="p">.</span><span class="mf">91.255</span>
        <span class="nx">netname</span><span class="p">:</span>        <span class="nx">NLA</span><span class="o">-</span><span class="nx">AU</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">National</span> <span class="nx">Library</span> <span class="k">of</span> <span class="nx">Australia</span>
        <span class="nx">country</span><span class="p">:</span>        <span class="nx">AU</span>
        <span class="nx">org</span><span class="p">:</span>            <span class="nx">ORG</span><span class="o">-</span><span class="nx">NLOA1</span><span class="o">-</span><span class="nx">AP</span>
        <span class="nx">admin</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>        <span class="nx">NC68</span><span class="o">-</span><span class="nx">AP</span>
        <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>         <span class="nx">NC68</span><span class="o">-</span><span class="nx">AP</span>
        <span class="nx">abuse</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>        <span class="nx">AN649</span><span class="o">-</span><span class="nx">AP</span>
        <span class="nx">status</span><span class="p">:</span>         <span class="nx">ASSIGNED</span> <span class="nx">PORTABLE</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">--------------------------------------------------------</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="nx">To</span> <span class="nx">report</span> <span class="nx">network</span> <span class="nx">abuse</span><span class="p">,</span> <span class="nx">please</span> <span class="nx">contact</span> <span class="nx">mnt</span><span class="o">-</span><span class="nx">irt</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="nx">For</span> <span class="nx">troubleshooting</span><span class="p">,</span> <span class="nx">please</span> <span class="nx">contact</span> <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span> <span class="nx">and</span> <span class="nx">admin</span><span class="o">-</span><span class="nx">c</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="nx">Report</span> <span class="nx">invalid</span> <span class="nx">contact</span> <span class="nx">via</span> <span class="nx">www</span><span class="p">.</span><span class="nx">apnic</span><span class="p">.</span><span class="nx">net</span><span class="o">/</span><span class="nx">invalidcontact</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">--------------------------------------------------------</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">by</span><span class="p">:</span>         <span class="nx">APNIC</span><span class="o">-</span><span class="nx">HM</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">routes</span><span class="p">:</span>     <span class="nx">MAINT</span><span class="o">-</span><span class="nx">AU</span><span class="o">-</span><span class="nx">NLA</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">irt</span><span class="p">:</span>        <span class="nx">IRT</span><span class="o">-</span><span class="nx">NLA</span><span class="o">-</span><span class="nx">NON</span><span class="o">-</span><span class="nx">AU</span>
        <span class="nx">last</span><span class="o">-</span><span class="nx">modified</span><span class="p">:</span>  <span class="mi">2023</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">17</span><span class="nx">T08</span><span class="p">:</span><span class="mi">17</span><span class="p">:</span><span class="mi">38</span><span class="nx">Z</span>
        <span class="nx">source</span><span class="p">:</span>         <span class="nx">APNIC</span>
    </code></pre></figure> </div> </details> <details><summary>RIPE WHOIS data sample</summary> <div class="code-container"> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">        <span class="nx">inetnum</span><span class="p">:</span>        <span class="mf">217.204</span><span class="p">.</span><span class="mf">204.224</span> <span class="o">-</span> <span class="mf">217.204</span><span class="p">.</span><span class="mf">204.231</span>
        <span class="nx">netname</span><span class="p">:</span>        <span class="nx">WESLEYLOWE</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">Wesley</span> <span class="nx">Lowe</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">Office</span>
        <span class="nx">descr</span><span class="p">:</span>          <span class="nx">Bolton</span><span class="p">,</span> <span class="nx">Lancs</span><span class="p">.</span>
        <span class="nx">country</span><span class="p">:</span>        <span class="nx">GB</span>
        <span class="nx">admin</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>        <span class="nx">DUMY</span><span class="o">-</span><span class="nx">RIPE</span>
        <span class="nx">tech</span><span class="o">-</span><span class="nx">c</span><span class="p">:</span>         <span class="nx">DUMY</span><span class="o">-</span><span class="nx">RIPE</span>
        <span class="nx">status</span><span class="p">:</span>         <span class="nx">ASSIGNED</span> <span class="nx">PA</span>
        <span class="nx">mnt</span><span class="o">-</span><span class="nx">by</span><span class="p">:</span>         <span class="nx">EASYNET</span><span class="o">-</span><span class="nx">UK</span><span class="o">-</span><span class="nx">MNT</span>
        <span class="nx">created</span><span class="p">:</span>        <span class="mi">1970</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span><span class="nx">T00</span><span class="p">:</span><span class="mi">00</span><span class="p">:</span><span class="mi">00</span><span class="nx">Z</span>
        <span class="nx">last</span><span class="o">-</span><span class="nx">modified</span><span class="p">:</span>  <span class="mi">2001</span><span class="o">-</span><span class="mi">09</span><span class="o">-</span><span class="mi">21</span><span class="nx">T22</span><span class="p">:</span><span class="mi">08</span><span class="p">:</span><span class="mi">06</span><span class="nx">Z</span>
        <span class="nx">source</span><span class="p">:</span>         <span class="nx">RIPE</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">****************************</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">*</span> <span class="nx">THIS</span> <span class="nx">OBJECT</span> <span class="nx">IS</span> <span class="nx">MODIFIED</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">*</span> <span class="nx">Please</span> <span class="nx">note</span> <span class="nx">that</span> <span class="nx">all</span> <span class="nx">data</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">generally</span> <span class="nx">regarded</span> <span class="nx">as</span> <span class="nx">personal</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">*</span> <span class="nx">data</span> <span class="nx">has</span> <span class="nx">been</span> <span class="nx">removed</span> <span class="k">from</span> <span class="k">this</span> <span class="nx">object</span><span class="p">.</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">*</span> <span class="nx">To</span> <span class="nx">view</span> <span class="nx">the</span> <span class="nx">original</span> <span class="nx">object</span><span class="p">,</span> <span class="nx">please</span> <span class="nx">query</span> <span class="nx">the</span> <span class="nx">RIPE</span> <span class="nx">Database</span> <span class="nx">at</span><span class="p">:</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">*</span> <span class="nx">http</span><span class="p">:</span><span class="c1">//www.ripe.net/whois</span>
        <span class="nx">remarks</span><span class="p">:</span>        <span class="o">****************************</span>
    </code></pre></figure> </div> </details> <h3 id="parent-vs-child-delegations">Parent vs Child Delegations</h3> <p>Parent as columns, Child as rows</p> <h4 id="arin-1">ARIN</h4> <p><strong>IPv4</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ASSIGNMENT</th> <th style="text-align: right">RIR</th> <th style="text-align: right">ALLOCATION</th> <th style="text-align: right">REALLOCATION</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ASSIGNMENT</td> <td style="text-align: right">5</td> <td style="text-align: right">8</td> <td style="text-align: right">10</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">RIR</td> <td style="text-align: right">203</td> <td style="text-align: right">nan</td> <td style="text-align: right">7242</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATION</td> <td style="text-align: right">18</td> <td style="text-align: right">nan</td> <td style="text-align: right">72591</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">REALLOCATION</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">391</td> <td style="text-align: right">42418</td> <td style="text-align: right">2315</td> </tr> <tr> <td style="text-align: left">REASSIGNMENT</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">679</td> <td style="text-align: right">2.73962e+06</td> <td style="text-align: right">293061</td> </tr> <tr> <td style="text-align: left">RESERVED</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">2</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <p><strong>IPv6</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">RESERVED</th> <th style="text-align: right">RIR</th> <th style="text-align: right">ALLOCATION</th> <th style="text-align: right">REALLOCATION</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ASSIGNMENT</td> <td style="text-align: right">7</td> <td style="text-align: right">6</td> <td style="text-align: right">1</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">RESERVED</td> <td style="text-align: right">2</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">RIR</td> <td style="text-align: right">37</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATION</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">9686</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">REASSIGNMENT</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">39</td> <td style="text-align: right">278785</td> <td style="text-align: right">584</td> </tr> <tr> <td style="text-align: left">REALLOCATION</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">25</td> <td style="text-align: right">10255</td> <td style="text-align: right">108</td> </tr> </tbody> </table> <h4 id="lacnic-1">LACNIC</h4> <p><strong>IPv4</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED</th> <th style="text-align: right">REASSIGNED</th> <th style="text-align: right">ASSIGNED</th> <th style="text-align: right">REALLOCATED</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED</td> <td style="text-align: right">16815</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">REASSIGNED</td> <td style="text-align: right">2</td> <td style="text-align: right">108686</td> <td style="text-align: right">1087</td> <td style="text-align: right">880</td> <td style="text-align: right">1186</td> </tr> <tr> <td style="text-align: left">REALLOCATED</td> <td style="text-align: right">nan</td> <td style="text-align: right">305261</td> <td style="text-align: right">8</td> <td style="text-align: right">13</td> <td style="text-align: right">29766</td> </tr> <tr> <td style="text-align: left">ASSIGNED</td> <td style="text-align: right">2552</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <p><strong>IPv6</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED</th> <th style="text-align: right">REALLOCATED</th> <th style="text-align: right">ASSIGNED</th> <th style="text-align: right">REASSIGNED</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED</td> <td style="text-align: right">11210</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED</td> <td style="text-align: right">1560</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">REALLOCATED</td> <td style="text-align: right">8</td> <td style="text-align: right">10116</td> <td style="text-align: right">1367</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">REASSIGNED</td> <td style="text-align: right">7</td> <td style="text-align: right">2734</td> <td style="text-align: right">933</td> <td style="text-align: right">52</td> <td style="text-align: right">35</td> </tr> </tbody> </table> <h4 id="afrinic">AFRINIC</h4> <p><strong>IPv4</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED UNSPECIFIED</th> <th style="text-align: right">POLICY-RESERVED</th> <th style="text-align: right">ALLOCATED PA</th> <th style="text-align: right">ASSIGNED PA</th> <th style="text-align: right">ASSIGNED PI</th> <th style="text-align: right">SUB-ALLOCATED PA</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED UNSPECIFIED</td> <td style="text-align: right">9</td> <td style="text-align: right">145</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED PA</td> <td style="text-align: right">483</td> <td style="text-align: right">2879</td> <td style="text-align: right">3</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PA</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">142288</td> <td style="text-align: right">5865</td> <td style="text-align: right">1</td> <td style="text-align: right">39</td> </tr> <tr> <td style="text-align: left">SUB-ALLOCATED PA</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">360</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">nan</td> <td style="text-align: right">10</td> <td style="text-align: right">nan</td> <td style="text-align: right">2</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">496</td> <td style="text-align: right">980</td> <td style="text-align: right">146</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">POLICY-RESERVED</td> <td style="text-align: right">nan</td> <td style="text-align: right">5</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <p><strong>IPv6</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED UNSPECIFIED</th> <th style="text-align: right">ALLOCATED-BY-RIR</th> <th style="text-align: right">ASSIGNED PA</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED UNSPECIFIED</td> <td style="text-align: right">1</td> <td style="text-align: right">2</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED-BY-RIR</td> <td style="text-align: right">nan</td> <td style="text-align: right">1057</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PA</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">30715</td> <td style="text-align: right">55</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">nan</td> <td style="text-align: right">328</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">nan</td> <td style="text-align: right">3</td> <td style="text-align: right">1</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <h4 id="ripe">RIPE</h4> <p><strong>IPv4</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED PA</th> <th style="text-align: right">ASSIGNED PA</th> <th style="text-align: right">LIR-PARTITIONED PA</th> <th style="text-align: right">SUB-ALLOCATED PA</th> <th style="text-align: right">LEGACY</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED UNSPECIFIED</td> <td style="text-align: right">12810</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PA</td> <td style="text-align: right">879</td> <td style="text-align: right">3.67471e+06</td> <td style="text-align: right">1683</td> <td style="text-align: right">354457</td> <td style="text-align: right">43318</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED PA</td> <td style="text-align: right">66978</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">LIR-PARTITIONED PA</td> <td style="text-align: right">11</td> <td style="text-align: right">11418</td> <td style="text-align: right">7</td> <td style="text-align: right">1697</td> <td style="text-align: right">82</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">SUB-ALLOCATED PA</td> <td style="text-align: right">234</td> <td style="text-align: right">8767</td> <td style="text-align: right">nan</td> <td style="text-align: right">301</td> <td style="text-align: right">2221</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED-ASSIGNED PA</td> <td style="text-align: right">23</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">LEGACY</td> <td style="text-align: right">5150</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">120322</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">20258</td> <td style="text-align: right">1</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">50</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <p><strong>IPv6</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED-BY-RIR</th> <th style="text-align: right">ALLOCATED-BY-LIR</th> <th style="text-align: right">AGGREGATED-BY-LIR</th> <th style="text-align: right">ASSIGNED</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED-BY-RIR</td> <td style="text-align: right">15</td> <td style="text-align: right">22658</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED</td> <td style="text-align: right">nan</td> <td style="text-align: right">654162</td> <td style="text-align: right">57695</td> <td style="text-align: right">63231</td> <td style="text-align: right">32</td> </tr> <tr> <td style="text-align: left">ALLOCATED-BY-LIR</td> <td style="text-align: right">nan</td> <td style="text-align: right">11603</td> <td style="text-align: right">6674</td> <td style="text-align: right">2</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">AGGREGATED-BY-LIR</td> <td style="text-align: right">nan</td> <td style="text-align: right">13262</td> <td style="text-align: right">50485</td> <td style="text-align: right">702</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED ANYCAST</td> <td style="text-align: right">nan</td> <td style="text-align: right">67</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PI</td> <td style="text-align: right">nan</td> <td style="text-align: right">3799</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> </tbody> </table> <h4 id="apnic-1">APNIC</h4> <p><strong>IPv4</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED PORTABLE</th> <th style="text-align: right">ASSIGNED PORTABLE</th> <th style="text-align: right">ALLOCATED NON-PORTABLE</th> <th style="text-align: right">ASSIGNED NON-PORTABLE</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED PORTABLE</td> <td style="text-align: right">217</td> <td style="text-align: right">41539</td> <td style="text-align: right">3</td> <td style="text-align: right">96</td> <td style="text-align: right">4</td> </tr> <tr> <td style="text-align: left">ASSIGNED PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">13263</td> <td style="text-align: right">164</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED NON-PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">81252</td> <td style="text-align: right">54</td> <td style="text-align: right">13604</td> <td style="text-align: right">81</td> </tr> <tr> <td style="text-align: left">ASSIGNED NON-PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">876538</td> <td style="text-align: right">180</td> <td style="text-align: right">215280</td> <td style="text-align: right">21075</td> </tr> </tbody> </table> <p><strong>IPv6</strong></p> <table> <thead> <tr> <th style="text-align: left"> </th> <th style="text-align: right">ROOT</th> <th style="text-align: right">ALLOCATED PORTABLE</th> <th style="text-align: right">ASSIGNED NON-PORTABLE</th> <th style="text-align: right">ALLOCATED NON-PORTABLE</th> <th style="text-align: right">ASSIGNED PORTABLE</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">ALLOCATED PORTABLE</td> <td style="text-align: right">9</td> <td style="text-align: right">8858</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED NON-PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">75031</td> <td style="text-align: right">831</td> <td style="text-align: right">781</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ALLOCATED NON-PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">12257</td> <td style="text-align: right">nan</td> <td style="text-align: right">121</td> <td style="text-align: right">nan</td> </tr> <tr> <td style="text-align: left">ASSIGNED PORTABLE</td> <td style="text-align: right">nan</td> <td style="text-align: right">6134</td> <td style="text-align: right">nan</td> <td style="text-align: right">nan</td> <td style="text-align: right">6</td> </tr> </tbody> </table> <h3 id="links-to-policy-manuals">Links to Policy Manuals</h3> <ul> <li><a href="https://www.arin.net/participate/policy/nrpm/">ARIN</a></li> <li><a href="https://www.lacnic.net/innovaportal/file/680/1/manual-politicas-en-2-19.pdf">LACNIC</a></li> <li><a href="https://afrinic.net/policy/manual">AFRINIC</a></li> <li><a href="https://www.apnic.net/community/policy/resources">APNIC</a></li> <li><a href="https://www.ripe.net/publications/docs/ripe-826/">RIPE</a></li> </ul> <p> </p>]]></content><author><name>Deepak Gouda</name></author><summary type="html"><![CDATA[Understanding the delegation status values in WHOIS data from RIRs]]></summary></entry><entry><title type="html">Plotly Visualizations for Latex</title><link href="https://deepakgouda.github.io/blog/2023/plotly/" rel="alternate" type="text/html" title="Plotly Visualizations for Latex"/><published>2023-06-06T00:04:25+00:00</published><updated>2023-06-06T00:04:25+00:00</updated><id>https://deepakgouda.github.io/blog/2023/plotly</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2023/plotly/"><![CDATA[<h1 id="bar-plots">Bar Plots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>
<span class="kn">import</span> <span class="n">plotly.io</span> <span class="k">as</span> <span class="n">pio</span>


<span class="k">def</span> <span class="nf">plotGroup</span><span class="p">(</span>
    <span class="n">df</span><span class="p">,</span>
    <span class="n">names</span><span class="o">=</span><span class="p">[],</span>
    <span class="n">title</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">ylabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">note</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">accuracy</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span>
    <span class="n">image_path</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">legend_pos</span><span class="o">=</span><span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">,</span>
<span class="p">):</span>
    <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">names</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">names</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">columns</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Figure</span><span class="p">(</span>
        <span class="n">data</span><span class="o">=</span><span class="p">[</span>
            <span class="n">go</span><span class="p">.</span><span class="nc">Bar</span><span class="p">(</span>
                <span class="n">name</span><span class="o">=</span><span class="n">n</span><span class="p">,</span>
                <span class="n">x</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
                <span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">n</span><span class="p">],</span>
                <span class="n">text</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
                <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
            <span class="p">)</span>
            <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">names</span>
        <span class="p">]</span>
    <span class="p">)</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
        <span class="n">barmode</span><span class="o">=</span><span class="sh">"</span><span class="s">group</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">title_text</span><span class="o">=</span><span class="n">title</span><span class="p">,</span>
        <span class="n">title_x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span>
        <span class="n">height</span><span class="o">=</span><span class="n">height</span><span class="p">,</span>
        <span class="n">xaxis_title</span><span class="o">=</span><span class="n">xlabel</span><span class="p">,</span>
        <span class="n">yaxis_title</span><span class="o">=</span><span class="n">ylabel</span><span class="p">,</span>
        <span class="n">font_family</span><span class="o">=</span><span class="sh">"</span><span class="s">Serif</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">font_size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span>
        <span class="c1"># margin_l=5,
</span>        <span class="n">margin_t</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="n">margin_b</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="n">margin_r</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="k">if</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.01</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.99</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">note</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">add_annotation</span><span class="p">(</span>
            <span class="n">showarrow</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
            <span class="n">text</span><span class="o">=</span><span class="n">note</span><span class="p">,</span>
            <span class="n">xref</span><span class="o">=</span><span class="sh">"</span><span class="s">x domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">x</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span>
            <span class="n">yref</span><span class="o">=</span><span class="sh">"</span><span class="s">y domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=-</span><span class="mf">0.2</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
            <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>            <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="mi">600</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
</code></pre></div></div> <h1 id="cdf-plots">CDF Plots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>

<span class="k">def</span> <span class="nf">plotCDF</span><span class="p">(</span>
    <span class="n">df_plot</span><span class="p">,</span>
    <span class="n">x</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">log_x</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">log_y</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">title</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">ylabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">note</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">legend_pos</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">image_path</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">note_xpos</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span>
    <span class="n">note_ypos</span><span class="o">=-</span><span class="mf">0.14</span><span class="p">,</span>
    <span class="n">show</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
<span class="p">):</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">ecdf</span><span class="p">(</span>
        <span class="n">df_plot</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">ecdfnorm</span><span class="o">=</span><span class="sh">"</span><span class="s">percent</span><span class="sh">"</span><span class="p">,</span> <span class="n">log_x</span><span class="o">=</span><span class="n">log_x</span><span class="p">,</span> <span class="n">log_y</span><span class="o">=</span><span class="n">log_y</span>
    <span class="p">)</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
        <span class="n">barmode</span><span class="o">=</span><span class="sh">"</span><span class="s">group</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">title_text</span><span class="o">=</span><span class="n">title</span><span class="p">,</span>
        <span class="n">title_x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span>
        <span class="n">height</span><span class="o">=</span><span class="n">height</span><span class="p">,</span>
        <span class="n">xaxis_title</span><span class="o">=</span><span class="n">xlabel</span><span class="p">,</span>
        <span class="n">yaxis_title</span><span class="o">=</span><span class="n">ylabel</span><span class="p">,</span>
        <span class="n">font_family</span><span class="o">=</span><span class="sh">"</span><span class="s">Serif</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">font_size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span>
        <span class="c1"># margin_l=5,
</span>        <span class="c1"># margin_t=5,
</span>        <span class="c1"># margin_b=5,
</span>        <span class="c1"># margin_r=5,
</span>    <span class="p">)</span>
    <span class="k">if</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.01</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.99</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">note</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">add_annotation</span><span class="p">(</span>
            <span class="n">showarrow</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
            <span class="n">text</span><span class="o">=</span><span class="n">note</span><span class="p">,</span>
            <span class="n">xref</span><span class="o">=</span><span class="sh">"</span><span class="s">x domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">x</span><span class="o">=</span><span class="n">note_xpos</span><span class="p">,</span>
            <span class="n">yref</span><span class="o">=</span><span class="sh">"</span><span class="s">y domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="n">note_ypos</span><span class="p">,</span>
        <span class="p">)</span>

    <span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
            <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>            <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="n">height</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="n">width</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">fig</span>
</code></pre></div></div> <h1 id="line-plots">Line Plots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>
<span class="kn">import</span> <span class="n">plotly.io</span> <span class="k">as</span> <span class="n">pio</span>


<span class="k">def</span> <span class="nf">plotLine</span><span class="p">(</span>
    <span class="n">df</span><span class="p">,</span>
    <span class="n">names</span><span class="o">=</span><span class="p">[],</span>
    <span class="n">title</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">ylabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">note</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">accuracy</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span>
    <span class="n">image_path</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<span class="p">):</span>
    <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">names</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">names</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">columns</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Figure</span><span class="p">(</span>
        <span class="n">data</span><span class="o">=</span><span class="p">[</span>
            <span class="n">go</span><span class="p">.</span><span class="nc">Scatter</span><span class="p">(</span>
                <span class="n">name</span><span class="o">=</span><span class="n">n</span><span class="p">,</span>
                <span class="n">x</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
                <span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">n</span><span class="p">],</span>
                <span class="n">text</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
                <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">top center</span><span class="sh">"</span><span class="p">,</span>
            <span class="p">)</span>
            <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">names</span>
        <span class="p">]</span>
    <span class="p">)</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
        <span class="n">barmode</span><span class="o">=</span><span class="sh">"</span><span class="s">group</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">title_text</span><span class="o">=</span><span class="n">title</span><span class="p">,</span>
        <span class="n">title_x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
        <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span>
        <span class="n">height</span><span class="o">=</span><span class="n">height</span><span class="p">,</span>
        <span class="n">xaxis_title</span><span class="o">=</span><span class="n">xlabel</span><span class="p">,</span>
        <span class="n">yaxis_title</span><span class="o">=</span><span class="n">ylabel</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="k">if</span> <span class="n">note</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">add_annotation</span><span class="p">(</span>
            <span class="n">showarrow</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
            <span class="n">text</span><span class="o">=</span><span class="n">note</span><span class="p">,</span>
            <span class="n">xref</span><span class="o">=</span><span class="sh">"</span><span class="s">x domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
            <span class="n">yref</span><span class="o">=</span><span class="sh">"</span><span class="s">y domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=-</span><span class="mf">0.3</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
            <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>            <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="mi">600</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">plotLineColor</span><span class="p">(</span>
    <span class="n">df_plot</span><span class="p">,</span>
    <span class="n">x</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">title</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">ylabel</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span>
    <span class="n">note</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">legend_pos</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">image_path</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">note_xpos</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span>
    <span class="n">note_ypos</span><span class="o">=-</span><span class="mf">0.14</span><span class="p">,</span>
    <span class="n">show</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
<span class="p">):</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">line</span><span class="p">(</span><span class="n">df_plot</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">)</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
        <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span>
        <span class="n">height</span><span class="o">=</span><span class="n">height</span><span class="p">,</span>
        <span class="n">title</span><span class="o">=</span><span class="n">title</span><span class="p">,</span>
        <span class="n">xaxis_title</span><span class="o">=</span><span class="n">xlabel</span><span class="p">,</span>
        <span class="n">yaxis_title</span><span class="o">=</span><span class="n">ylabel</span><span class="p">,</span>
        <span class="n">font_family</span><span class="o">=</span><span class="sh">"</span><span class="s">Serif</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">font_size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="k">if</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.01</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">legend_pos</span> <span class="o">==</span> <span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.99</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">note</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">add_annotation</span><span class="p">(</span>
            <span class="n">showarrow</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
            <span class="n">text</span><span class="o">=</span><span class="n">note</span><span class="p">,</span>
            <span class="n">xref</span><span class="o">=</span><span class="sh">"</span><span class="s">x domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">x</span><span class="o">=</span><span class="n">note_xpos</span><span class="p">,</span>
            <span class="n">yref</span><span class="o">=</span><span class="sh">"</span><span class="s">y domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=</span><span class="n">note_ypos</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>

    <span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
            <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>            <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="n">width</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="n">height</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="n">show</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">fig</span>
</code></pre></div></div> <h1 id="scatter-plots">Scatter Plots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span>
    <span class="n">df_temp</span><span class="p">,</span>
    <span class="n">x</span><span class="o">=</span><span class="sh">"</span><span class="s">col1</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="sh">"</span><span class="s">col2</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">size</span><span class="o">=</span><span class="sh">"</span><span class="s">col3</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">col4</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">hover_name</span><span class="o">=</span><span class="sh">"</span><span class="s">col5</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="nf">update_traces</span><span class="p">(</span>
    <span class="n">marker</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">line</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">DarkSlateGrey</span><span class="sh">"</span><span class="p">)),</span>
    <span class="n">selector</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">mode</span><span class="o">=</span><span class="sh">"</span><span class="s">markers</span><span class="sh">"</span><span class="p">),</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
    <span class="n">xaxis_title</span><span class="o">=</span><span class="sh">"</span><span class="s">xaxis_title</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">yaxis_title</span><span class="o">=</span><span class="sh">"</span><span class="s">yaxis_title</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">font_family</span><span class="o">=</span><span class="sh">"</span><span class="s">Serif</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">font_size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span>
    <span class="c1"># margin_l=5,
</span>    <span class="n">margin_t</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">margin_b</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">margin_r</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">left</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.01</span><span class="p">))</span>
<span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>        <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="mi">600</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>    <span class="p">}</span>
<span class="p">}</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
<span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
    <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
</code></pre></div></div> <h1 id="pie-plots">Pie Plots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>
<span class="kn">import</span> <span class="n">plotly.io</span> <span class="k">as</span> <span class="n">pio</span>


<span class="k">def</span> <span class="nf">plotPie</span><span class="p">(</span>
    <span class="n">labels</span><span class="p">,</span> <span class="n">values</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">note</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">image_path</span><span class="o">=</span><span class="bp">None</span>
<span class="p">):</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">fig</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Figure</span><span class="p">(</span>
        <span class="n">data</span><span class="o">=</span><span class="p">[</span>
            <span class="n">go</span><span class="p">.</span><span class="nc">Pie</span><span class="p">(</span>
                <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span>
                <span class="n">values</span><span class="o">=</span><span class="n">values</span><span class="p">,</span>
                <span class="n">textinfo</span><span class="o">=</span><span class="sh">"</span><span class="s">label+percent</span><span class="sh">"</span><span class="p">,</span>
                <span class="n">insidetextorientation</span><span class="o">=</span><span class="sh">"</span><span class="s">radial</span><span class="sh">"</span><span class="p">,</span>
                <span class="n">hole</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span>
            <span class="p">)</span>
        <span class="p">]</span>
    <span class="p">)</span>

    <span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">title_text</span><span class="o">=</span><span class="n">title</span><span class="p">,</span> <span class="n">title_x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">height</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">note</span><span class="p">:</span>
        <span class="n">fig</span><span class="p">.</span><span class="nf">add_annotation</span><span class="p">(</span>
            <span class="n">showarrow</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
            <span class="n">text</span><span class="o">=</span><span class="n">note</span><span class="p">,</span>
            <span class="n">xref</span><span class="o">=</span><span class="sh">"</span><span class="s">x domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">x</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
            <span class="n">yref</span><span class="o">=</span><span class="sh">"</span><span class="s">y domain</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">y</span><span class="o">=-</span><span class="mf">0.3</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
            <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>            <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="mi">600</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">image_path</span><span class="p">:</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">image_path</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
</code></pre></div></div> <h1 id="histograms">Histograms</h1> <h3 id="histogram-with-bars">Histogram with bars</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Figure</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">add_trace</span><span class="p">(</span>
    <span class="n">go</span><span class="p">.</span><span class="nc">Histogram</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">ROV</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
        <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">ROV</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">opacity</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
        <span class="n">marker_color</span><span class="o">=</span><span class="sh">"</span><span class="s">blue</span><span class="sh">"</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">add_trace</span><span class="p">(</span>
    <span class="n">go</span><span class="p">.</span><span class="nc">Histogram</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">NoROV</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
        <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">NoROV</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">opacity</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
        <span class="n">marker_color</span><span class="o">=</span><span class="sh">"</span><span class="s">orange</span><span class="sh">"</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">add_trace</span><span class="p">(</span>
    <span class="n">go</span><span class="p">.</span><span class="nc">Histogram</span><span class="p">(</span>
        <span class="n">x</span><span class="o">=</span><span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">Unknown</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
        <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">Unknown</span><span class="sh">"</span><span class="p">,</span>
        <span class="n">opacity</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
        <span class="n">marker_color</span><span class="o">=</span><span class="sh">"</span><span class="s">green</span><span class="sh">"</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <h3 id="histogram-with-no-bars-but-lines">Histogram with no bars but lines</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">plotly.figure_factory</span> <span class="k">as</span> <span class="n">ff</span>

<span class="n">ff</span><span class="p">.</span><span class="nf">create_distplot</span><span class="p">(</span>
    <span class="p">[</span>
        <span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">ROV</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
        <span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">NoROV</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
        <span class="n">df_plot</span><span class="p">[</span><span class="n">df_plot</span><span class="p">.</span><span class="n">ROVStatus</span> <span class="o">==</span> <span class="sh">"</span><span class="s">Unknown</span><span class="sh">"</span><span class="p">].</span><span class="n">Perc_RPKI_Cust</span><span class="p">,</span>
    <span class="p">],</span>
    <span class="p">[</span><span class="sh">"</span><span class="s">ROV</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">NoROV</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">Unknown</span><span class="sh">"</span><span class="p">],</span>
    <span class="n">bin_size</span><span class="o">=</span><span class="mf">0.01</span><span class="p">,</span>
    <span class="n">show_rug</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">show_hist</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">show_curve</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">histnorm</span><span class="o">=</span><span class="sh">"</span><span class="s">probability density</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
</code></pre></div></div> <h1 id="subplots">Subplots</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">plotly.subplots</span> <span class="kn">import</span> <span class="n">make_subplots</span>
<span class="kn">import</span> <span class="n">plotly.graph_objects</span> <span class="k">as</span> <span class="n">go</span>
<span class="kn">import</span> <span class="n">plotly.io</span> <span class="k">as</span> <span class="n">pio</span>

<span class="n">accuracy</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">trace11</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Bar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">],</span>
    <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">text</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
    <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">#636efa</span><span class="sh">"</span><span class="p">),</span>
<span class="p">)</span>
<span class="n">trace12</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Bar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">],</span>
    <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">text</span><span class="o">=</span><span class="n">df_plot1</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
    <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">#ef553b</span><span class="sh">"</span><span class="p">),</span>
<span class="p">)</span>

<span class="n">trace21</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Bar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">],</span>
    <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">text</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA found</span><span class="sh">"</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
    <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">showlegend</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">#636efa</span><span class="sh">"</span><span class="p">),</span>
<span class="p">)</span>
<span class="n">trace22</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="nc">Bar</span><span class="p">(</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">.</span><span class="n">index</span><span class="p">,</span>
    <span class="n">y</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">],</span>
    <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">text</span><span class="o">=</span><span class="n">df_plot2</span><span class="p">[</span><span class="sh">"</span><span class="s">ROA not found</span><span class="sh">"</span><span class="p">].</span><span class="nf">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">).</span><span class="nf">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">),</span>
    <span class="n">textposition</span><span class="o">=</span><span class="sh">"</span><span class="s">auto</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">showlegend</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">marker</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">#ef553b</span><span class="sh">"</span><span class="p">),</span>
<span class="p">)</span>

<span class="n">fig</span> <span class="o">=</span> <span class="nf">make_subplots</span><span class="p">(</span><span class="n">rows</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">cols</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">shared_xaxes</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="nf">append_trace</span><span class="p">(</span><span class="n">trace11</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">append_trace</span><span class="p">(</span><span class="n">trace12</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">append_trace</span><span class="p">(</span><span class="n">trace21</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">append_trace</span><span class="p">(</span><span class="n">trace22</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span>
    <span class="n">barmode</span><span class="o">=</span><span class="sh">"</span><span class="s">group</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">title_text</span><span class="o">=</span><span class="sh">"</span><span class="s">title</span><span class="sh">"</span><span class="p">,</span>
    <span class="c1"># title_x=0.5,
</span>    <span class="n">width</span><span class="o">=</span><span class="mi">600</span><span class="p">,</span>
    <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span>
    <span class="n">xaxis_title</span><span class="o">=</span><span class="sh">"</span><span class="s">xlabel</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">yaxis_title</span><span class="o">=</span><span class="sh">"</span><span class="s">Percentage</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">font_family</span><span class="o">=</span><span class="sh">"</span><span class="s">Serif</span><span class="sh">"</span><span class="p">,</span>
    <span class="n">font_size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span>
    <span class="n">margin_l</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">margin_t</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">margin_b</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
    <span class="n">margin_r</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">update_layout</span><span class="p">(</span><span class="n">legend</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">yanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">top</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mf">0.99</span><span class="p">,</span> <span class="n">xanchor</span><span class="o">=</span><span class="sh">"</span><span class="s">right</span><span class="sh">"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="mf">0.99</span><span class="p">))</span>
<span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">"</span><span class="s">toImageButtonOptions</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span>
        <span class="sh">"</span><span class="s">format</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">png</span><span class="sh">"</span><span class="p">,</span>  <span class="c1"># one of png, svg, jpeg, webp
</span>        <span class="sh">"</span><span class="s">filename</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">image</span><span class="sh">"</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">height</span><span class="sh">"</span><span class="p">:</span> <span class="mi">600</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">width</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
        <span class="sh">"</span><span class="s">scale</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>  <span class="c1"># Multiply title/legend/axis/canvas sizes by this factor
</span>    <span class="p">}</span>
<span class="p">}</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">config</span><span class="p">)</span>
<span class="n">pio</span><span class="p">.</span><span class="nf">full_figure_for_development</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">pio</span><span class="p">.</span><span class="nf">write_image</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="sh">"</span><span class="s">./image.pdf</span><span class="sh">"</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">300</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mf">1.5</span> <span class="o">*</span> <span class="mi">300</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Technology"/><category term="tech"/><summary type="html"><![CDATA[My functions for beautiful plots.]]></summary></entry><entry><title type="html">Parameter-free version of Adaptive Gradient Methods for Strongly-Convex Functions</title><link href="https://deepakgouda.github.io/blog/2023/adagrad/" rel="alternate" type="text/html" title="Parameter-free version of Adaptive Gradient Methods for Strongly-Convex Functions"/><published>2023-05-04T21:01:00+00:00</published><updated>2023-05-04T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2023/adagrad</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2023/adagrad/"><![CDATA[<p><strong>Theorem</strong>: Suppose all loss functions are \(\lambda-SC\), then OGD with \(\eta_t = \frac{1}{\lambda t}\) achieves \(Reg_T^A \leq \frac{G^2}{\lambda}(1+ \log T)\)</p> <p><strong>Proof</strong>:</p> <p><strong>Step 1</strong>: \(\forall t \in [T]\), find upper bound for \(f_t(w_t) - f_t(w^\ast)\)</p> \[\begin{align*} f_t(w_t) - f_t(w^\ast) &amp; \leq \nabla f_t(w_t)^T (w_t - w^\ast) - \frac{\lambda}{2} \Vert w_t - w^\ast \Vert^2_2 &amp;&amp; (\lambda - SC)\\ &amp; \leq \frac{\Vert w_t - w^\ast \Vert^2_2 - \Vert w_{t+1} - w^\ast \Vert^2_2}{2 \eta_t} + \frac{\eta_t}{2}G^2 - \frac{\lambda}{2} \Vert w_t - w^\ast \Vert^2_2 \\ \end{align*}\] <p><strong>Step 2:</strong> find \(Reg^{\text{OGD}}_T\)</p> \[\begin{align*} Reg_T^{\text{OGD}} &amp; = \sum_{t=1}^T (f_t(w_t) - f_t(w^\ast)) \\ &amp; = \sum_{t=1}^T \left( \frac{\Vert w_t - w^\ast \Vert^2_2 - \Vert w_{t+1} - w^\ast \Vert^2_2}{2 \eta_t} + \frac{\eta_t}{2}G^2 - \frac{\lambda}{2} \Vert w_t - w^\ast \Vert^2_2 \right) \\ &amp; = \sum_{t=2}^T \Vert w_t - w^\ast \Vert_2^2 \left(\frac{1}{2\eta_t} - \frac{1}{2\eta_{t-1}}\right) + \Vert w_1 - w^\ast \Vert_2^2 \frac{1}{2\eta_1} - \Vert w_{T+1} - w^\ast \Vert_2^2 \frac{1}{2\eta_T} + G^2\sum_{t=1}^T \frac{\eta_t}{2} - \sum_{t=1}^T \frac{\lambda}{2} \Vert w_t - w^\ast \Vert^2_2 \\ &amp; = \sum_{t=2}^T \Vert w_t - w^\ast \Vert_2^2 \left(\frac{1}{2\eta_t} - \frac{1}{2\eta_{t-1}}-\frac{\lambda}{2}\right) + \Vert w_1 - w^\ast \Vert_2^2 \frac{1}{2\eta_1} - \Vert w_{T+1} - w^\ast \Vert_2^2 \frac{1}{2\eta_T} + G^2\sum_{t=1}^T \frac{\eta_t}{2} -\frac{\lambda}{2}\Vert w_1 - w^\ast \Vert^2_2 \end{align*}\] <p>Note that \(\eta_t = 1/(\lambda t)\). Thus, \(\frac{1}{2\eta_t}-\frac{1}{2\eta_{t-1}}-\frac{\lambda}{2}=(\lambda t - \lambda (t-1) -\lambda)/2=0.\) Moreover, \(\frac{1}{2\eta_1}-\frac{\lambda}{2}=0.\) Thus, we get</p> \[\begin{align*} Reg_T^{\text{OGD}} &amp; = \sum_{t=1}^T (f_t(w_t) - f_t(w^\ast)) \\ &amp; \leq G^2\sum_{t=1}^T\frac{\eta_t}{2}=\frac{G^2}{2\lambda}\sum_{t=1}^T\frac{1}{t}\leq \frac{G^2}{\lambda}(\log T+1). \end{align*}\] <p>The algorithm has a hyperparameter \(\eta\) which in turn depends on \(\lambda\). We propose a parameter-free version which is also data-dependent, hence achieving faster convergence. Our algorithm is inspired from AdaGrad and MALER. We show that this algorithm has \(Reg_T^A = O(\log T)\).</p> <p>Full paper on <a href="https://arxiv.org/abs/2306.06613">arXiv</a>.</p>]]></content><author><name></name></author><category term="Research"/><category term="research"/><category term="machine-learning"/><summary type="html"><![CDATA[AdaGrad with O(log T) regret]]></summary></entry><entry><title type="html">FRRouters - Configuring Intra/Inter-domain Routing</title><link href="https://deepakgouda.github.io/blog/2022/frr/" rel="alternate" type="text/html" title="FRRouters - Configuring Intra/Inter-domain Routing"/><published>2022-12-21T17:06:59+00:00</published><updated>2022-12-21T17:06:59+00:00</updated><id>https://deepakgouda.github.io/blog/2022/frr</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2022/frr/"><![CDATA[<h2 id="config-commands">Config commands</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~ ip address show

~ ip route list
default via 65.200.0.1 dev ssh
65.200.0.0/24 dev ssh scope <span class="nb">link  </span>src 65.200.0.1
65.200.0.0/24 dev 65-S1 scope <span class="nb">link  </span>src 65.200.0.3
158.65.0.0/16 dev ssh scope <span class="nb">link  </span>src 158.65.10.6

~ ip address add 65.200.0.1/24 dev 65-S1
~ ip address del 65.200.0.1/24 dev 65-S1
~ ip route add default/24 via 65.200.0.1 dev 65-S1 <span class="c"># add default gateway</span>
~ ip route del default/24 via 65.200.0.1 dev 65-S1 <span class="c"># delete default gateway</span>
~ netstat <span class="nt">-t</span> <span class="c"># current default gateway</span>
~ route <span class="nt">-n</span> <span class="c"># old school command</span>
</code></pre></div></div> <h4 id="note-">Note :</h4> <blockquote> <p>Commands are identical for IPv6 <br/> IPv6 routes : <code class="language-plaintext highlighter-rouge">ip -6 route</code> <br/> For IPv6, do not delete or change the link local address (the one starting with <code class="language-plaintext highlighter-rouge">fe80</code>). <br/></p> </blockquote> <h1 id="network-topology">Network Topology</h1> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/frr/609-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/frr/609-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/frr/609-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/frr/609.png" data-zoomable=""/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/frr/145-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/frr/145-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/frr/145-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/frr/145.png" data-zoomable=""/> </picture> </figure> </div> <h3 id="notes">Notes</h3> <ul> <li>One host is connected to each router (not shown in the figure for clarity).</li> <li>Every router, but the ones at <code class="language-plaintext highlighter-rouge">GENE</code> and <code class="language-plaintext highlighter-rouge">ZURI</code>, has an external connection to one of your neighboring ASes.</li> </ul> <h1 id="frrouting">FRRouting</h1> <h4 id="autocompletion-features">Autocompletion features</h4> <p>When you enter the FRR CLI, you see the following line:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router#
</code></pre></div></div> <p>At any time in the CLI, you can type <code class="language-plaintext highlighter-rouge">?</code> to see all the possible commands you can currently type (some of the shown commands are):</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# ?
    clear       Reset functions
    configure   Configuration from vty interface
    exit        Exit current mode and down to previous mode
    no          Negate a command or set its defaults
    ping        Send echo messages
    quit        Exit current mode and down to previous mode
    show        Show running system information
    traceroute  Trace route to destination
    write       Write running configuration to memory, network, or terminal
</code></pre></div></div> <p>For example, the command <code class="language-plaintext highlighter-rouge">show</code> will print various snapshots of the router state. To see what kind of information can be shown, just type <code class="language-plaintext highlighter-rouge">show ?</code>. For example, <code class="language-plaintext highlighter-rouge">show running-config</code> will print the running configuration.</p> <blockquote> <p>The interfaces are not visible in the output at the beginning, but will start appearing as soon as you have configured them.</p> </blockquote> <p>You can shorten the commands when there is no possible ambiguity. For instance <code class="language-plaintext highlighter-rouge">show run</code> is equivalent to <code class="language-plaintext highlighter-rouge">show running-config</code>. Similarly to the Linux terminal, you can also use auto-completion by pressing the tabulator key.</p> <h4 id="testing-connectivity">Testing connectivity</h4> <p>If you want to test your connectivity, you can use <code class="language-plaintext highlighter-rouge">ping</code> or <code class="language-plaintext highlighter-rouge">traceroute</code> from the CLI of the routers. However, whenever it is possible, always prefer to run the <code class="language-plaintext highlighter-rouge">ping</code> and <code class="language-plaintext highlighter-rouge">traceroute</code> from the hosts because they can use DNS whereas the routers cannot.</p> <h4 id="switching-to-configuration-mode">Switching to configuration mode</h4> <p>To configure your router, you must enter the configuration mode with <code class="language-plaintext highlighter-rouge">configure terminal</code> (<code class="language-plaintext highlighter-rouge">conf t</code> for the short version). You can verify that you are in the configuration mode by looking for the <em>config</em> prefix in your CLI prompt. Use <code class="language-plaintext highlighter-rouge">exit</code> to leave the configuration mode and to go back to the previous mode. Commands that work <em>in</em> configuration mode do not (necessarily) work <em>outside</em> configuration mode and vice versa. Notably, commands starting with <code class="language-plaintext highlighter-rouge">show</code> do not work in configuration mode.</p> <h4 id="undo-a-command">Undo a command</h4> <p>If you want to delete parts of the configuration, you can prefix the command you want to remove with <code class="language-plaintext highlighter-rouge">no</code>. For example, if you add an IP address to an interface with the command</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip address 1.0.0.1/24
</code></pre></div></div> <p>(explained in more detail in the next section of the tutorial), you can simply run</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>no ip address 1.0.0.1/24
</code></pre></div></div> <p>to remove the IP address again.</p> <h4 id="note">Note</h4> <blockquote> <p>The interfaces are not visible in the output at the beginning, but will start appearing as soon as you have configured them. <br/> To test connectivity you can use <code class="language-plaintext highlighter-rouge">ping</code> or <code class="language-plaintext highlighter-rouge">traceroute</code> from the CLI of the routers <br/> To configure your router, you must enter the configuration mode with <code class="language-plaintext highlighter-rouge">configure terminal</code> <br/></p> </blockquote> <h3 id="interface-configs">Interface configs</h3> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>show interface &lt;interface name&gt;

router# conf t
router(config)# interface INTERFACENAME
router(config-if)# ip address 1.0.0.1/24
</code></pre></div></div> <h3 id="configure-static-routes">Configure static routes</h3> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# ip route 3.0.0.0/24 2.0.0.2
router(config)# ip route 4.0.0.0/24 someinterface
router# show ip route static
S   3.0.0.0/24 [1/0] via 2.0.0.2 inactive
</code></pre></div></div> <h3 id="verification">Verification</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>show run <span class="c"># verify if the config has been updated correctly</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# show ip route connected
C&gt;* 2.0.0.0/24 is directly connected, INTERFACENAME
</code></pre></div></div> <h4 id="note-1">Note</h4> <blockquote> <p>Do <strong>not</strong> configure two different IP addresses on one interface at the same time. If you have configured a wrong IP address, first remove the address with the <code class="language-plaintext highlighter-rouge">no</code> command and then configure a new IP address:</p> </blockquote> <h1 id="ospf">OSPF</h1> <p>OSPF routers flood IP routes over OSPF adjacencies. FRR routers continuously (and automatically) probe any OSPF-enabled interface to discover new neighbors to establish adjacencies with. By default, FRR router will activate OSPF on any interface whose prefix is covered by a <code class="language-plaintext highlighter-rouge">network</code> command under the <code class="language-plaintext highlighter-rouge">router ospf</code> part of the configuration. For instance, the following configuration would activate OSPF on any interface whose IP address falls under <code class="language-plaintext highlighter-rouge">1.0.0.0/24</code> or <code class="language-plaintext highlighter-rouge">2.0.0.0/24</code>:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router ospf
router(config)# network 1.0.0.0/24 area 0
router(config)# network 2.0.0.0/24 area 0
</code></pre></div></div> <p>OSPF has scalability issues when there is a large number of routers. To make it more scalable, the router topology can be hierarchically divided in what is called “areas”. In this assignment, your network is small and you do not need more than one area: you will only use area 0.</p> <p>To check the OSPF neighbors of a router, you can use the following command:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# show ip ospf neighbor
    Neighbor    ID  Pri State Dead Time   Address Interface   RXmtL   RqstL   DBsmL
    1.0.0.2 1   Full/Backup     1.0.0.2 port_BASE:1.0.0.1   0   0   0
    2.0.0.2 1   Full/Backup     2.0.0.2 port_LUGA:2.0.0.1   0   0   0
</code></pre></div></div> <blockquote> <p>The <code class="language-plaintext highlighter-rouge">Neighbor</code> may be a different IP than you expect since it is an ID that may come from any interface, e.g. also the <code class="language-plaintext highlighter-rouge">ssh</code> interface. Do not worry about this.</p> </blockquote> <p>Here, we see that the router has established two OSPF sessions with two neighbors. The first one is connected via the interface <code class="language-plaintext highlighter-rouge">1.0.0.1</code> and its IP is <code class="language-plaintext highlighter-rouge">1.0.0.2</code>. The second one is connected via the interface <code class="language-plaintext highlighter-rouge">2.0.0.1</code> and its IP is <code class="language-plaintext highlighter-rouge">2.0.0.2</code>. Now that you are connected to two routers with OSPF, they can send you information about the topology of the network. Let’s take at look at the routes received by OSPF with the following command.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# show ip route ospf
O   1.0.0.0/24 [110/10] is directly connected, port_BASE, 07:09:33
O   2.0.0.0/24 [110/10] is directly connected, port_LUGA, 06:14:24
O&gt;* 10.104.0.0/24 [110/20] via 2.0.0.2, port_LUGA, 00:00:10
</code></pre></div></div> <p>You can see that our router has learned how to reach the subnet <code class="language-plaintext highlighter-rouge">10.104.0.0/24</code>. The <code class="language-plaintext highlighter-rouge">O</code> at the beginning of each line indicates that the router has learned this subnet from OSPF. To reach it, it must send the packets to its neighbor router <code class="language-plaintext highlighter-rouge">2.0.0.2</code>. If you want to have more information about the routers of this OSPF area, you can use <code class="language-plaintext highlighter-rouge">show ip ospf database</code>.</p> <p>With OSPF, each link between two routers has a specific weight, and only the shortest paths are used to forward packets. Below is an example of how you set the weight of a link connected to interface <code class="language-plaintext highlighter-rouge">INTERFACENAME</code> to 900:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# interface INTERFACENAME
router(config-if)# ip ospf cost 900
</code></pre></div></div> <p>Use these commands to configure all the OSPF weights in your own network.</p> <h2 id="links">Links</h2> <ul> <li><a href="http://docs.frrouting.org/en/latest/">Official Documentation</a></li> </ul> <h1 id="bgp">BGP</h1> <p>While OSPF is used to provide IP connectivity within an AS, BGP is used to advertise prefixes between different ASes. Unlike OSPF, BGP routers will not automatically establish sessions. Each session needs to be configured individually. The following commands show you how to: start a BGP process and establish two BGP sessions with neighboring routers. The integer following <code class="language-plaintext highlighter-rouge">router bgp</code> indicates your AS-number. Here, the local AS-number is 2:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router bgp 2
router(config-router)# neighbor 150.0.0.1 remote-as 15
router(config-router)# neighbor 2.0.0.2 remote-as 2
</code></pre></div></div> <p>By default, whenever the <code class="language-plaintext highlighter-rouge">remote-as</code> is different from the local number (here 2), the BGP session is configured as an external one (i.e., an eBGP session is established). In contrast, when the <code class="language-plaintext highlighter-rouge">remote-as</code> is equivalent to the local one, the BGP session is configured as an internal one (iBGP). Here, the first session is an eBGP session, established with a router in another AS <code class="language-plaintext highlighter-rouge">150.0.0.1</code>, while the second one is an internal session, established with a router within your AS <code class="language-plaintext highlighter-rouge">2.0.0.2</code>.</p> <p>:exclamation: Important for eBGP sessions with FRR v.7.5 (used in this year’s project): When setting up an eBGP session, there is an implicit route-map which denies everything that is automatically configured on the session. Route-maps enable you to express input and output filters on the routes sent and received by a BGP session. We explain them in detail in the next <a href="2.5.6 Configure BGP policies">section</a>. To start advertising and receiving prefixes on an eBGP session, you need to override this implicit route-map by explicitly defining a route-map which permits all (or only some) prefixes, and apply it on the corresponding eBGP session. For instance, to advertise and receive all the prefixes, you need to define a route-map that permits everything:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# route-map ACCEPT_ALL permit 10
router(config-route-map)# 
</code></pre></div></div> <p>Then, you need to apply this route-map on the BGP session, for both the advertised and received prefixes:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router bgp 2
router(config-router)# neighbor 150.0.0.1 route-map ACCEPT_ALL in
router(config-router)# neighbor 150.0.0.1 route-map ACCEPT_ALL out
</code></pre></div></div> <p>Now, you should see that our two BGP sessions are up and allow advertising/receiving prefixes. You can check the state of your BGP sessions using the command <code class="language-plaintext highlighter-rouge">show ip bgp summary</code>:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# show ip bgp summary
Neighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
2.0.0.2        4      2       3       6        0    0    0 00:01:16        0
150.0.0.1      4     15    2009    1979        0    0    0 01:31:42        1
</code></pre></div></div> <p>To advertise a prefix on a BGP session, you can just use the following command:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router bgp 2
router(config-router)# network 10.104.0.0/24
</code></pre></div></div> <p>As soon as you do that, your neighbor <code class="language-plaintext highlighter-rouge">150.0.0.1</code> receives this advertisement and knows that it can forward to you all the packets with a destination IP in the subnet <code class="language-plaintext highlighter-rouge">10.104.0.0/24</code>. Note that when you advertise a prefix, it generally means you know how to reach this prefix, otherwise you will drop the packets, and your neighbor will not be very happy.</p> <p>:warning: With some routers (and that is the case for our FRR routers) BGP will not announce a route for a prefix that it does not know how to reach. If you want to announce your /8 prefix, you must then configure a default route to <em>Null</em>, such as the following:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip route 10.104.0.0/24 Null0
</code></pre></div></div> <p>Perhaps one of your BGP neighbor advertises you prefixes as well, let’s check that:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# sh ip route bgp
B&gt;* 2.101.0.0/24 [20/0] via 2.0.0.2, interface_used, 00:03:17
</code></pre></div></div> <p>In this case, we can see that neighbor <code class="language-plaintext highlighter-rouge">2.0.0.2</code> has advertised one prefix: <code class="language-plaintext highlighter-rouge">2.101.0.0/24</code>. The <code class="language-plaintext highlighter-rouge">B</code> at the beginning of the line indicates that the router has learned this prefix from BGP.</p> <h3 id="bgp-update-source-for-ibgp-sessions">BGP update-source for iBGP sessions</h3> <p>By default, when a router establishes an iBGP session with a peer, it uses the IP address of the interface closest to the iBGP peer as source address. This is fine as long as this interface is up. If this interface goes down but the actual router is still running, the iBGP connection will tear down even though the router may be reachable over a different path/interface. In practice, operators therefore often use so called “loopback” interfaces as source of the iBGP connections. Loopback interfaces are virtual interfaces with an IP address which uniquely identifies the router in your network. For example, if you are group 7 and you want to configure an iBGP session from <code class="language-plaintext highlighter-rouge">MUNI</code> to <code class="language-plaintext highlighter-rouge">MILA</code>, you could use the following commands (on <code class="language-plaintext highlighter-rouge">MUNI</code>):</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router bgp 7
router(config-router)# neighbor 7.158.0.1 remote-as 7
router(config-router)# neighbor 7.158.0.1 update-source lo
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">7.158.0.1</code> is the loopback interface IP of <code class="language-plaintext highlighter-rouge">MILA</code>. With <code class="language-plaintext highlighter-rouge">update-source lo</code> you make sure that the <code class="language-plaintext highlighter-rouge">MUNI</code> router is using its loopback interface address as source address.</p> <h3 id="bgp-next-hop-self">BGP next-hop-self</h3> <p>The figure below illustrates a possible pitfall when eBGP announcements are distributed over iBGP sessions. If router <code class="language-plaintext highlighter-rouge">R1</code> is advertising its prefix <code class="language-plaintext highlighter-rouge">11.22.33.0/24</code> towards <code class="language-plaintext highlighter-rouge">R2</code> (over the eBGP session), the next-hop of the advertisement is the IP of the outgoing interface of <code class="language-plaintext highlighter-rouge">R1</code> (<code class="language-plaintext highlighter-rouge">10.0.0.2</code>). Router <code class="language-plaintext highlighter-rouge">R2</code> is then distributing this advertisement to all its iBGP neighbors (<code class="language-plaintext highlighter-rouge">R3</code>). Per default, the next-hop of the advertisement is not changed and is still <code class="language-plaintext highlighter-rouge">10.0.0.2</code>. That can lead to problems for router <code class="language-plaintext highlighter-rouge">R3</code>. In a normal network configuration, the subnets used between two eBGP routers (<code class="language-plaintext highlighter-rouge">10.0.0.0/30</code>) are <strong>not</strong> distributed in the connected ASes, e.g. via OSPF. Router <code class="language-plaintext highlighter-rouge">R3</code> does therefore not know how it can reach the next-hop of the advertised prefix (<code class="language-plaintext highlighter-rouge">11.22.33.0/24</code>) and will discard the advertisement. To solve this problem, we can use the BGP <code class="language-plaintext highlighter-rouge">next-hop-self</code> command. When properly configured, router <code class="language-plaintext highlighter-rouge">R2</code> is using its own interface IP as next-hop every time it distributes announcements from eBGP sessions to its iBGP neighbors. In this example, <code class="language-plaintext highlighter-rouge">R2</code> would replace the next-hop <code class="language-plaintext highlighter-rouge">10.0.0.2</code> with its interface IP connected to R3 (<code class="language-plaintext highlighter-rouge">20.0.0.1</code>). Router <code class="language-plaintext highlighter-rouge">R3</code> then receives an advertisement for prefix <code class="language-plaintext highlighter-rouge">11.22.33.0/24</code> with next-hop <code class="language-plaintext highlighter-rouge">20.0.0.1</code>. The <code class="language-plaintext highlighter-rouge">20.0.0.0/30</code> subnet is distributed via OSPF and <code class="language-plaintext highlighter-rouge">R3</code> does therefore know how to reach the next-hop of the advertisement and can install this prefix in its forwarding table.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/frr/next-hop-self-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/frr/next-hop-self-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/frr/next-hop-self-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/frr/next-hop-self.png" data-zoomable=""/> </picture> </figure> </div> <p>To add the next-hop-self command on FRR routers, you can use the following commands (on router <code class="language-plaintext highlighter-rouge">R2</code>):</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>router# conf t
router(config)# router bgp 100
router(config-router)# neighbor 20.0.0.2 remote-as 100
router(config-router)# neighbor 20.0.0.2 next-hop-self
</code></pre></div></div>]]></content><author><name></name></author><category term="Setup"/><category term="tech"/><summary type="html"><![CDATA[Configuring OSPF, BGP on FRRouters]]></summary></entry><entry><title type="html">The spread of true and false news online</title><link href="https://deepakgouda.github.io/blog/2022/true_and_false_rumors/" rel="alternate" type="text/html" title="The spread of true and false news online"/><published>2022-08-25T21:01:00+00:00</published><updated>2022-08-25T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2022/true_and_false_rumors</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2022/true_and_false_rumors/"><![CDATA[<p>Critique <a href="../../true_and_false_rumors.pdf">here</a>!</p>]]></content><author><name></name></author><category term="Research"/><category term="research"/><category term="notes-and-summaries"/><category term="machine-learning"/><summary type="html"><![CDATA[A critique of The spread of true and false news online]]></summary></entry><entry><title type="html">Mocking in C++</title><link href="https://deepakgouda.github.io/blog/2022/unit_testing/" rel="alternate" type="text/html" title="Mocking in C++"/><published>2022-06-01T02:21:00+00:00</published><updated>2022-06-01T02:21:00+00:00</updated><id>https://deepakgouda.github.io/blog/2022/unit_testing</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2022/unit_testing/"><![CDATA[<h1 id="unit-testing-in-c-using-googletest-and-gmock">Unit testing in C++ using GoogleTest and gMock</h1> <hr/> <h2 id="installation">Installation</h2> <h3 id="build-from-source">Build from source</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/google/googletest.git <span class="nt">-b</span> release-1.11.0
<span class="nb">cd </span>googletest
<span class="nb">mkdir </span>build
<span class="nb">cd </span>build
cmake ..
make
make <span class="nb">install</span>
</code></pre></div></div> <h3 id="add-to-existing-cmake-configuration">Add to existing cmake configuration</h3> <div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># CMakeLists.txt.in</span>
<span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.15.0<span class="p">)</span>

<span class="nb">project</span><span class="p">(</span>googletest-download NONE<span class="p">)</span>

<span class="nb">include</span><span class="p">(</span>ExternalProject<span class="p">)</span>
<span class="nf">ExternalProject_Add</span><span class="p">(</span>googletest
  GIT_REPOSITORY    https://github.com/google/googletest.git
  GIT_TAG           release-1.11.0
  SOURCE_DIR        <span class="s2">"</span><span class="si">${</span><span class="nv">CMAKE_CURRENT_BINARY_DIR</span><span class="si">}</span><span class="s2">/googletest-src"</span>
  BINARY_DIR        <span class="s2">"</span><span class="si">${</span><span class="nv">CMAKE_CURRENT_BINARY_DIR</span><span class="si">}</span><span class="s2">/googletest-build"</span>
  CONFIGURE_COMMAND <span class="s2">""</span>
  BUILD_COMMAND     <span class="s2">""</span>
  INSTALL_COMMAND   <span class="s2">""</span>
  TEST_COMMAND      <span class="s2">""</span>
<span class="p">)</span>
</code></pre></div></div> <div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">configure_file</span><span class="p">(</span>CMakeLists.txt.in googletest-download/CMakeLists.txt<span class="p">)</span>
<span class="nb">execute_process</span><span class="p">(</span>COMMAND <span class="si">${</span><span class="nv">CMAKE_COMMAND</span><span class="si">}</span> -G <span class="s2">"</span><span class="si">${</span><span class="nv">CMAKE_GENERATOR</span><span class="si">}</span><span class="s2">"</span> .
  RESULT_VARIABLE result
  WORKING_DIRECTORY <span class="si">${</span><span class="nv">CMAKE_CURRENT_BINARY_DIR</span><span class="si">}</span>/googletest-download <span class="p">)</span>
<span class="nb">if</span><span class="p">(</span>result<span class="p">)</span>
  <span class="nb">message</span><span class="p">(</span>FATAL_ERROR <span class="s2">"CMake step for googletest failed: </span><span class="si">${</span><span class="nv">result</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="nb">endif</span><span class="p">()</span>
<span class="nb">execute_process</span><span class="p">(</span>COMMAND <span class="si">${</span><span class="nv">CMAKE_COMMAND</span><span class="si">}</span> --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY <span class="si">${</span><span class="nv">CMAKE_CURRENT_BINARY_DIR</span><span class="si">}</span>/googletest-download <span class="p">)</span>
<span class="nb">if</span><span class="p">(</span>result<span class="p">)</span>
  <span class="nb">message</span><span class="p">(</span>FATAL_ERROR <span class="s2">"Build step for googletest failed: </span><span class="si">${</span><span class="nv">result</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="nb">endif</span><span class="p">()</span>
<span class="nb">add_subdirectory</span><span class="p">(</span><span class="si">${</span><span class="nv">CMAKE_BINARY_DIR</span><span class="si">}</span>/googletest-src
                 <span class="si">${</span><span class="nv">CMAKE_BINARY_DIR</span><span class="si">}</span>/googletest-build
                 EXCLUDE_FROM_ALL<span class="p">)</span>

<span class="nb">set</span><span class="p">(</span>TESTS ./tests/test.cpp<span class="p">)</span>
<span class="nb">add_executable</span><span class="p">(</span>unit_test <span class="si">${</span><span class="nv">TESTS</span><span class="si">}</span><span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>unit_test gtest_main<span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>unit_test gmock<span class="p">)</span>
</code></pre></div></div> <h2 id="sample-binary">Sample binary</h2> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// a.hpp</span>
<span class="cp">#ifndef A_HPP
#define A_HPP
</span>
<span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;fstream&gt;</span><span class="cp">
</span>
<span class="kt">char</span> <span class="nf">getByte</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">c</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">writeByte</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="n">str</span><span class="p">);</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="nf">readByte</span><span class="p">();</span>
<span class="cp">#endif
</span></code></pre></div></div> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// a.cpp</span>
<span class="cp">#include</span> <span class="cpf">"a.hpp"</span><span class="cp">
</span>
<span class="kt">char</span> <span class="nf">getByte</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">c</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">writeByte</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">ofstream</span> <span class="n">file_wrtr</span><span class="p">;</span>
	<span class="n">file_wrtr</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"dump.log"</span><span class="p">);</span>
	<span class="n">file_wrtr</span> <span class="o">&lt;&lt;</span> <span class="n">str</span><span class="p">;</span>
	<span class="n">file_wrtr</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="nf">readByte</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">line</span><span class="p">;</span>
	<span class="n">std</span><span class="o">::</span><span class="n">ifstream</span> <span class="n">file_rdr</span><span class="p">(</span><span class="s">"dump.log"</span><span class="p">);</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">file_rdr</span><span class="p">.</span><span class="n">is_open</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="k">while</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">getline</span><span class="p">(</span><span class="n">file_rdr</span><span class="p">,</span> <span class="n">line</span><span class="p">))</span>
		<span class="p">{</span>
			<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">line</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">file_rdr</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">line</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// main_test.cpp</span>
<span class="cp">#include</span> <span class="cpf">"a.hpp"</span><span class="cp">
#include</span> <span class="cpf">"gtest/gtest.h"</span><span class="cp">
</span>
<span class="n">TEST</span><span class="p">(</span><span class="n">DummyTest</span><span class="p">,</span> <span class="n">getByte</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="sc">'a'</span><span class="p">};</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="sc">'a'</span><span class="p">,</span> <span class="n">getByte</span><span class="p">(</span><span class="n">c</span><span class="p">));</span>
<span class="p">}</span>

<span class="n">TEST</span><span class="p">(</span><span class="n">DummyTest</span><span class="p">,</span> <span class="n">readByte</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Hello, world!"</span><span class="p">;</span>
	<span class="n">writeByte</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="n">readByte</span><span class="p">());</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
	<span class="o">::</span><span class="n">testing</span><span class="o">::</span><span class="n">InitGoogleTest</span><span class="p">(</span><span class="o">&amp;</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
	<span class="k">return</span> <span class="n">RUN_ALL_TESTS</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// main.cpp</span>
<span class="cp">#include</span> <span class="cpf">"a.hpp"</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="sc">'a'</span><span class="p">};</span>
	<span class="n">std</span> <span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">getByte</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Hello, world!"</span><span class="p">;</span>
	<span class="n">writeByte</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">readByte</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h2 id="cmake-configuration">CMake configuration</h2> <div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.15.0<span class="p">)</span>
<span class="nb">project</span><span class="p">(</span>Test VERSION 0.1.0<span class="p">)</span>

<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_STANDARD 20<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_STANDARD_REQUIRED True<span class="p">)</span>

<span class="nb">set</span><span class="p">(</span>FILES_TO_TEST a.cpp<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>UNIT_TESTS main_test.cpp<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>MAIN_FILE main.cpp<span class="p">)</span>

<span class="nb">add_subdirectory</span><span class="p">(</span>googletest/<span class="p">)</span>
<span class="nb">include_directories</span><span class="p">(</span>googletest/include<span class="p">)</span>
<span class="nb">add_library</span><span class="p">(</span>files_to_test <span class="si">${</span><span class="nv">FILES_TO_TEST</span><span class="si">}</span><span class="p">)</span>

<span class="nb">enable_testing</span><span class="p">()</span>
<span class="nb">add_executable</span><span class="p">(</span>main <span class="si">${</span><span class="nv">MAIN_FILE</span><span class="si">}</span><span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>main files_to_test<span class="p">)</span>

<span class="nb">add_executable</span><span class="p">(</span>unit_test <span class="si">${</span><span class="nv">UNIT_TESTS</span><span class="si">}</span><span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>unit_test gtest gtest_main rt pthread files_to_test<span class="p">)</span>

<span class="nb">include</span><span class="p">(</span>GoogleTest<span class="p">)</span>
<span class="nf">gtest_discover_tests</span><span class="p">(</span>unit_test<span class="p">)</span>
</code></pre></div></div> <p>Run using <code class="language-plaintext highlighter-rouge">ctest</code> or <code class="language-plaintext highlighter-rouge">./unit_test</code></p> <h2 id="basics">Basics</h2> <ul> <li><em>Assertions</em> - statements that check whether a condition is true. Assertion’s result can be <em>success</em>, <em>nonfatal failure</em>, or <em>fatal failure</em>. If a fatal failure occurs, it aborts the current function; otherwise the program continues normally.</li> <li>A <em>test suite</em> contains one or many tests. You should group your tests into test suites that reflect the structure of the tested code. When multiple tests in a test suite need to share common objects and subroutines, you can put them into a <em>test fixture</em> class.</li> <li>A <em>test program</em> can contain multiple test suites.</li> <li><code class="language-plaintext highlighter-rouge">EXPECT_*</code> versions generate nonfatal failures, which don’t abort the current function.</li> <li><code class="language-plaintext highlighter-rouge">ASSERT_*</code> versions generate fatal failures when they fail, and <strong>abort the current function</strong>.</li> <li><code class="language-plaintext highlighter-rouge">ASSERT_*</code> may cause a space leak as it returns from the current function immediately, possibly skipping clean-up code. Hence, you may get a heap checker error in addition to assertion errors.</li> <li>Providing custom failure message : <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">ASSERT_EQ</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">y</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="o">&lt;&lt;</span> <span class="s">"Vectors x and y are of unequal length"</span><span class="p">;</span>
</code></pre></div> </div> </li> </ul> <h2 id="creating-a-test">Creating a Test</h2> <p><code class="language-plaintext highlighter-rouge">TEST()</code> - These are ordinary C++ functions that don’t return a value.</p> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">TEST</span><span class="p">(</span><span class="n">TestSuiteName</span><span class="p">,</span> <span class="n">TestName</span><span class="p">)</span>
<span class="p">{</span>
  <span class="p">...</span> <span class="n">test</span> <span class="n">body</span> <span class="p">...</span>
<span class="p">}</span>
</code></pre></div></div> <p><strong>Note</strong> : <code class="language-plaintext highlighter-rouge">TestSuiteName</code> and <code class="language-plaintext highlighter-rouge">TestName</code> names must be valid C++ identifiers, and they should not contain any underscores (<code class="language-plaintext highlighter-rouge">_</code>)</p> <h2 id="creating-a-test-fixture">Creating a Test Fixture</h2> <p>If you find yourself writing two or more tests that operate on similar data, you can use a <em>test fixture</em>. This allows you to reuse the same configuration of objects for several different tests.</p> <p>To create a fixture:</p> <ol> <li>Derive a class from <code class="language-plaintext highlighter-rouge">::testing::Test</code> . Start its body with <code class="language-plaintext highlighter-rouge">protected:</code>, as we’ll want to access fixture members from sub-classes.</li> <li>Inside the class, declare any objects you plan to use.</li> <li>If necessary, write a default constructor or <code class="language-plaintext highlighter-rouge">SetUp()</code> function to prepare the objects for each test. Use <code class="language-plaintext highlighter-rouge">override</code> in C++11 to make sure you spelled it correctly.</li> <li>If necessary, write a destructor or <code class="language-plaintext highlighter-rouge">TearDown()</code> function to release any resources you allocated in <code class="language-plaintext highlighter-rouge">SetUp()</code> . To learn when you should use the constructor/destructor and when you should use <code class="language-plaintext highlighter-rouge">SetUp()/TearDown()</code>, read the <a href="https://google.github.io/googletest/faq.html#CtorVsSetUp">FAQ</a>.</li> <li>If needed, define subroutines for your tests to share.</li> </ol> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">TEST_F</span><span class="p">(</span><span class="n">TestFixtureName</span><span class="p">,</span> <span class="n">TestName</span><span class="p">)</span>
<span class="p">{</span>
  <span class="p">...</span> <span class="n">test</span> <span class="n">body</span> <span class="p">...</span>
<span class="p">}</span>
</code></pre></div></div> <p><strong>Note</strong> : First define a test fixture class before using it in a <code class="language-plaintext highlighter-rouge">TEST_F()</code>, or you’ll get the compiler error “<code class="language-plaintext highlighter-rouge">virtual outside class declaration</code>”.</p> <p>For each test defined with <code class="language-plaintext highlighter-rouge">TEST_F()</code>, googletest will create a <em>fresh</em> test fixture at runtime, immediately initialize it via <code class="language-plaintext highlighter-rouge">SetUp()</code>, run the test, clean up by calling <code class="language-plaintext highlighter-rouge">TearDown()</code>, and then delete the test fixture.</p> <p><em>googletest</em> does <strong>not</strong> reuse the same test fixture for multiple tests.</p> <h3 id="example">Example</h3> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="nc">E</span><span class="p">&gt;</span>  <span class="c1">// E is the element type.</span>
<span class="k">class</span> <span class="nc">Queue</span> <span class="p">{</span>
	<span class="nl">public:</span>
	<span class="n">Queue</span><span class="p">();</span>
	<span class="kt">void</span> <span class="n">Enqueue</span><span class="p">(</span><span class="k">const</span> <span class="n">E</span><span class="o">&amp;</span> <span class="n">element</span><span class="p">);</span>
	<span class="n">E</span><span class="o">*</span> <span class="n">Dequeue</span><span class="p">();</span>  <span class="c1">// Returns NULL if the queue is empty.</span>
	<span class="kt">size_t</span> <span class="n">size</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
	<span class="p">...</span>
<span class="p">};</span>
</code></pre></div></div> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">QueueTest</span> <span class="o">:</span> <span class="k">public</span> <span class="o">::</span><span class="n">testing</span><span class="o">::</span><span class="n">Test</span> <span class="p">{</span>
	<span class="nl">protected:</span>
	<span class="kt">void</span> <span class="n">SetUp</span><span class="p">()</span> <span class="k">override</span>
	<span class="p">{</span>
		<span class="n">q1_</span><span class="p">.</span><span class="n">Enqueue</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
		<span class="n">q2_</span><span class="p">.</span><span class="n">Enqueue</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
		<span class="n">q2_</span><span class="p">.</span><span class="n">Enqueue</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="c1">// void TearDown() override {}</span>
	<span class="n">Queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q0_</span><span class="p">;</span>
	<span class="n">Queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q1_</span><span class="p">;</span>
	<span class="n">Queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q2_</span><span class="p">;</span>
<span class="p">};</span>

<span class="n">TEST_F</span><span class="p">(</span><span class="n">QueueTest</span><span class="p">,</span> <span class="n">IsEmptyInitially</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="n">q0_</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">TEST_F</span><span class="p">(</span><span class="n">QueueTest</span><span class="p">,</span> <span class="n">DequeueWorks</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span><span class="o">*</span> <span class="n">n</span> <span class="o">=</span> <span class="n">q0_</span><span class="p">.</span><span class="n">Dequeue</span><span class="p">();</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="nb">nullptr</span><span class="p">);</span>
	
	<span class="n">n</span> <span class="o">=</span> <span class="n">q1_</span><span class="p">.</span><span class="n">Dequeue</span><span class="p">();</span>
	<span class="n">ASSERT_NE</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="nb">nullptr</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="o">*</span><span class="n">n</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="n">q1_</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">0</span><span class="p">);</span>
	<span class="k">delete</span> <span class="n">n</span><span class="p">;</span>
	
	<span class="n">n</span> <span class="o">=</span> <span class="n">q2_</span><span class="p">.</span><span class="n">Dequeue</span><span class="p">();</span>
	<span class="n">ASSERT_NE</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="nb">nullptr</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="o">*</span><span class="n">n</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="n">q2_</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="mi">1</span><span class="p">);</span>
	<span class="k">delete</span> <span class="n">n</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p><strong>Note</strong> :</p> <ul> <li>You must <strong>not</strong> ignore the return value of <code class="language-plaintext highlighter-rouge">RUN_ALL_TESTS()</code>, or you will get a compiler error.</li> <li>You should call <code class="language-plaintext highlighter-rouge">RUN_ALL_TESTS()</code> only <strong>once</strong>. Calling it more than once conflicts with some advanced googletest features</li> </ul> <h2 id="gmock">gMock</h2> <p>When you write a prototype or test, often it’s not feasible or wise to rely on real objects entirely. A <strong>mock object</strong> implements the same interface as a real object (so it can be used as one), but lets you specify at run time how it will be used and what it should do (which methods will be called? in which order? how many times? with what arguments? what will they return? etc).</p> <h3 id="sample">Sample</h3> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// gmock_test.cpp</span>
<span class="cp">#include</span> <span class="cpf">"a.hpp"</span><span class="cp">
#include</span> <span class="cpf">"gmock/gmock.h"</span><span class="cp">
#include</span> <span class="cpf">"gtest/gtest.h"</span><span class="cp">
</span>
<span class="k">class</span> <span class="nc">FooBarMock</span> <span class="o">:</span> <span class="k">public</span> <span class="n">FooBar</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="kt">char</span><span class="p">,</span> <span class="n">getByte</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">));</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="kt">void</span><span class="p">,</span> <span class="n">writeByte</span><span class="p">,</span> <span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="p">));</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">,</span> <span class="n">readByte</span><span class="p">,</span> <span class="p">());</span>
<span class="p">};</span>

<span class="k">using</span> <span class="o">::</span><span class="n">testing</span><span class="o">::</span><span class="n">AtLeast</span><span class="p">;</span>

<span class="n">TEST</span><span class="p">(</span><span class="n">FooBarMock</span><span class="p">,</span> <span class="n">CanReadFile</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">FooBarMock</span> <span class="n">foo</span><span class="p">;</span>
	<span class="n">EXPECT_CALL</span><span class="p">(</span><span class="n">foo</span><span class="p">,</span> <span class="n">readByte</span><span class="p">()).</span><span class="n">Times</span><span class="p">(</span><span class="n">AtLeast</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
	<span class="n">foo</span><span class="p">.</span><span class="n">writeByte</span><span class="p">(</span><span class="s">"Hello, world!"</span><span class="p">);</span>
	<span class="n">foo</span><span class="p">.</span><span class="n">readByte</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div> <p><strong>Note</strong> : gMock requires expectations to be set <strong>before</strong> the mock functions are called, otherwise the behavior is <strong>undefined</strong>.</p> <h2 id="delegating-calls-to-fake-class">Delegating calls to Fake class</h2> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">FakeFooBar</span> <span class="o">:</span> <span class="k">public</span> <span class="n">FooBar</span>
<span class="p">{</span>
<span class="nl">public:</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">readByte</span><span class="p">()</span> <span class="k">override</span>
	<span class="p">{</span>
		<span class="k">return</span> <span class="s">"Child hello!"</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">};</span>

<span class="k">class</span> <span class="nc">MockFooBar</span> <span class="o">:</span> <span class="k">public</span> <span class="n">FooBar</span>

<span class="p">{</span>
<span class="nl">private:</span>
	<span class="n">FakeFooBar</span> <span class="n">fake_</span><span class="p">;</span>
<span class="nl">public:</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="kt">char</span><span class="p">,</span> <span class="n">getByte</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">),</span> <span class="p">(</span><span class="k">override</span><span class="p">));</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="kt">void</span><span class="p">,</span> <span class="n">writeByte</span><span class="p">,</span> <span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="p">),</span> <span class="p">(</span><span class="k">override</span><span class="p">));</span>
	<span class="n">MOCK_METHOD</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">,</span> <span class="n">readByte</span><span class="p">,</span> <span class="p">(),</span> <span class="p">(</span><span class="k">override</span><span class="p">));</span>
	
	<span class="kt">void</span> <span class="n">DelegateToFake</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="n">ON_CALL</span><span class="p">(</span><span class="o">*</span><span class="k">this</span><span class="p">,</span> <span class="n">readByte</span><span class="p">).</span><span class="n">WillByDefault</span><span class="p">([</span><span class="k">this</span><span class="p">]()</span>
			<span class="p">{</span> <span class="k">return</span> <span class="n">fake_</span><span class="p">.</span><span class="n">readByte</span><span class="p">();</span> <span class="p">});</span>
	<span class="p">}</span>
<span class="p">};</span>

<span class="n">TEST</span><span class="p">(</span><span class="n">FakeFooBar</span><span class="p">,</span> <span class="n">CanFake</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">std</span><span class="o">::</span><span class="n">shared_ptr</span><span class="o">&lt;</span><span class="n">MockFooBar</span><span class="o">&gt;</span> <span class="n">foo</span><span class="p">(</span><span class="k">new</span> <span class="n">MockFooBar</span><span class="p">);</span>
	<span class="n">foo</span><span class="o">-&gt;</span><span class="n">DelegateToFake</span><span class="p">();</span>
	<span class="n">EXPECT_CALL</span><span class="p">(</span><span class="o">*</span><span class="n">foo</span><span class="p">,</span> <span class="n">readByte</span><span class="p">()).</span><span class="n">Times</span><span class="p">(</span><span class="n">AtLeast</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
	<span class="n">EXPECT_CALL</span><span class="p">(</span><span class="o">*</span><span class="n">foo</span><span class="p">,</span> <span class="n">writeByte</span><span class="p">).</span><span class="n">Times</span><span class="p">(</span><span class="n">AtLeast</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
	<span class="n">EXPECT_CALL</span><span class="p">(</span><span class="o">*</span><span class="n">foo</span><span class="p">,</span> <span class="n">getByte</span><span class="p">).</span><span class="n">Times</span><span class="p">(</span><span class="n">AtLeast</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
	<span class="n">ReaderWriter</span> <span class="n">rw</span><span class="p">(</span><span class="n">foo</span><span class="p">.</span><span class="n">get</span><span class="p">());</span>
	<span class="n">rw</span><span class="p">.</span><span class="n">operation</span><span class="p">();</span>
	<span class="n">foo</span><span class="o">-&gt;</span><span class="n">writeByte</span><span class="p">(</span><span class="s">"Hello, world!"</span><span class="p">);</span>
	<span class="n">EXPECT_EQ</span><span class="p">(</span><span class="s">"Child hello!"</span><span class="p">,</span> <span class="n">foo</span><span class="o">-&gt;</span><span class="n">readByte</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div></div> <p><strong>Note</strong> : A call to <code class="language-plaintext highlighter-rouge">DelegateToFake()</code> is necessary to enable the delegation to fake functions</p> <h2 id="source">Source</h2> <ol> <li><a href="https://google.github.io/googletest/primer.html">googletest primer</a></li> <li><a href="https://google.github.io/googletest/gmock_for_dummies.html">gMock</a></li> <li><a href="https://google.github.io/googletest/gmock_cook_book.html#DelegatingToFake">Delegation to fake</a></li> <li><a href="https://github.com/deepakgouda/unit-testing-cpp">Complete Source</a></li> </ol>]]></content><author><name></name></author><category term="Setup"/><category term="cpp"/><category term="tech"/><category term="setup"/><summary type="html"><![CDATA[My notes on setting up gtest and gmock in C++.]]></summary></entry><entry><title type="html">It’s time for Docker</title><link href="https://deepakgouda.github.io/blog/2021/docker/" rel="alternate" type="text/html" title="It’s time for Docker"/><published>2021-06-04T21:01:00+00:00</published><updated>2021-06-04T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2021/docker</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2021/docker/"><![CDATA[<h2 id="why-docker">Why Docker?</h2> <p>Recently we started working on a big project with two separate codebases and several modules with disparate dependencies. Each dependency had a separate installation procedure and replicating the setup in a new machine started getting cumbersome. Quite often either the installations failed, build failed or the CI/CD broke off. Hence, we moved the application into a docker image.</p> <p>A docker image is a standardized executable component that combines application source code with all the operating system (OS) libraries and dependencies required to run the code in any environment. Creating a docker image requires a one-time setup in a <code class="language-plaintext highlighter-rouge">Dockerfile</code>. Several frameworks, for instance database systems like Postgres can be installed as a docker image. One can pull the docker image and get the DB up and running in seconds, hence circumventing the entire installation procedure. Just like spawning virual machines, one can spin up several docker containers and each will be in an isolated environment hence precluding dependency errors, version issues and helping in error replications.</p> <h2 id="how-to-setup-a-docker-image">How to setup a Docker image?</h2> <p>Let us consider a sample C++ project <strong>Titan</strong> which uses <em>cmake</em> to build and further, interacts with a PostgreSQL database. We will be using the C++ client <code class="language-plaintext highlighter-rouge">libpqxx</code> to interact with the database. Hence, the <code class="language-plaintext highlighter-rouge">DockerFile</code> would install all the necessary frameworks just like setting up a fresh machine. We would be using an Ubuntu 20.04 environment for the same and the <code class="language-plaintext highlighter-rouge">DockerFile</code> would look like :</p> <h3 id="sample-code-and-configurations">Sample code and configurations</h3> <h4 id="docker">Docker</h4> <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Specify OS</span>
<span class="k">FROM</span><span class="s"> ubuntu:20.04</span>

<span class="c"># Specify work directory</span>
<span class="k">COPY</span><span class="s"> . /usr/src/Titan</span>

<span class="c"># Perform necessary installations</span>
<span class="k">RUN </span>apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nt">-y</span> <span class="nb">install </span>cmake git vim gdb gcc-9 g++-9 build-essential

<span class="c"># Install libpqxx</span>
<span class="k">RUN </span>apt <span class="nb">install</span> <span class="nt">-y</span> libpq-dev
<span class="k">WORKDIR</span><span class="s"> /usr/src/Downloads/</span>
<span class="k">RUN </span><span class="nb">mkdir</span> <span class="nt">-p</span> /usr/src/Downloads/
<span class="k">RUN </span>git clone https://github.com/jtv/libpqxx.git
<span class="k">WORKDIR</span><span class="s"> /usr/src/Downloads/libpqxx</span>
<span class="k">RUN </span>./configure
<span class="k">RUN </span>make
<span class="k">RUN </span>make <span class="nb">install</span>

<span class="c"># Build the source</span>
<span class="k">RUN </span><span class="nb">mkdir</span> <span class="nt">-p</span> /usr/src/Titan/build
<span class="k">WORKDIR</span><span class="s"> /usr/src/Titan/build</span>
<span class="k">RUN </span>cmake ..
<span class="k">RUN </span>make
</code></pre></div></div> <h4 id="cmake">CMake</h4> <div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 3.0.0<span class="p">)</span>
<span class="nb">project</span><span class="p">(</span>Titan VERSION 0.1.0<span class="p">)</span>

<span class="c1"># flags</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_STANDARD 20<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_STANDARD_REQUIRED True<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_FLAGS <span class="s2">"</span><span class="si">${</span><span class="nv">CMAKE_CXX_FLAGS</span><span class="si">}</span><span class="s2"> -Wall"</span><span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_FLAGS <span class="s2">"</span><span class="si">${</span><span class="nv">CMAKE_CXX_FLAGS</span><span class="si">}</span><span class="s2"> -pthread"</span><span class="p">)</span>

<span class="c1"># include source files and header</span>
<span class="nb">include_directories</span><span class="p">(</span><span class="si">${</span><span class="nv">CMAKE_SOURCE_DIR</span><span class="si">}</span>/src <span class="si">${</span><span class="nv">CMAKE_SOURCE_DIR</span><span class="si">}</span>/include<span class="p">)</span>
<span class="nb">set</span><span class="p">(</span>SOURCES ./src/main.cpp ./src/utility.cpp<span class="p">)</span>
<span class="nb">add_executable</span><span class="p">(</span>main <span class="si">${</span><span class="nv">SOURCES</span><span class="si">}</span><span class="p">)</span>

<span class="c1"># include `libpq` and `libpqxx`</span>
<span class="nb">find_library</span><span class="p">(</span>PQXX_LIB pqxx<span class="p">)</span>
<span class="nb">find_library</span><span class="p">(</span>PQ_LIB pq<span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>main <span class="si">${</span><span class="nv">PQXX_LIB</span><span class="si">}</span> <span class="si">${</span><span class="nv">PQ_LIB</span><span class="si">}</span><span class="p">)</span>
</code></pre></div></div> <p>Here, we use C++ 20 and compile the source files <code class="language-plaintext highlighter-rouge">main.cpp</code> and <code class="language-plaintext highlighter-rouge">utility.cpp</code> into the binary <code class="language-plaintext highlighter-rouge">main</code>. We also link <code class="language-plaintext highlighter-rouge">libpqxx</code> and <code class="language-plaintext highlighter-rouge">libpq</code> to the binary.</p> <h3 id="building-and-running-the-container">Building and running the container</h3> <p><em>Note : If you get permission issue, add your user to a <code class="language-plaintext highlighter-rouge">usergroup</code> and allow the group the permission to execute <code class="language-plaintext highlighter-rouge">/var/run/docker.sock</code></em></p> <p>We build the docker container using</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker build <span class="nt">--pull</span> <span class="nt">--rm</span> <span class="nt">-f</span> <span class="s2">"/path/to/Dockerfile"</span> <span class="nt">-t</span> titan:madman <span class="s2">"/path/to/Titan"</span> 
</code></pre></div></div> <p>This creates a docker image which performas all the installations and builds necessary. Now one can spawn several instances of this environment instantaneously.</p> <p>Additional <code class="language-plaintext highlighter-rouge">docker image</code> commands:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker images                   <span class="c"># view all docker images using</span>
docker image <span class="nb">rm</span> &lt;image_name&gt;    <span class="c"># remove a docker image</span>
</code></pre></div></div> <p><em>Note : All Docker files are physically located in /var/lib/docker/</em></p> <p>Running to run a container using the docker image</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">--rm</span> <span class="nt">-it</span> titan:madman                                            <span class="c"># spawn an interactive terminal along with the container</span>
docker run <span class="nt">--rm</span> <span class="nt">-it</span> <span class="nt">--network</span><span class="o">=</span>host titan:madman                             <span class="c"># connect container to network</span>
docker run <span class="nt">--name</span> sanguine_strange <span class="nt">--rm</span> <span class="nt">-it</span> <span class="nt">--network</span><span class="o">=</span>host titan:madman     <span class="c"># give a custom name to the container</span>
</code></pre></div></div> <p>Additional <code class="language-plaintext highlighter-rouge">docker container</code> commands</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker container <span class="nb">ls</span>                         <span class="c"># list all containers</span>
docker container stop &lt;container-id/name&gt;   <span class="c"># stop a container</span>
docker container <span class="nb">rm</span> &lt;container-id/name&gt;     <span class="c"># remove a container</span>
</code></pre></div></div> <h3 id="persistent-storage">Persistent storage</h3> <p>Individual docker containers do not have a persistent storage, making them lightweight and fast. To persist storage, one can use <code class="language-plaintext highlighter-rouge">docker volume</code>. Effectively, docker volumes are similar to <a href="https://docs.docker.com/storage/bind-mounts/">bind mounts</a> except that volumes are managed by Docker and are isolated from the core functionality of the host machine. We map a specific directory on disk to a mount volume inside the docker.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker volume create data_lake
docker run <span class="nt">--network</span><span class="o">=</span>host <span class="nt">--rm</span> <span class="nt">-it</span> <span class="nt">-v</span> data_lake:/mnt/data titan:madman      <span class="c"># the volume will be mounted to /mnt/data inside the container</span>
</code></pre></div></div> <p><em>Note : the volume can be found at /var/lib/docker/volume/&lt;volume_name&gt;/_data</em></p> <p>A single docker volume can be mounted to multiple containers and hence can be used as data mounts or for interprocess communication as well.</p> <h3 id="setting-up-postgres">Setting up Postgres</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># download the postgres latest image</span>
docker pull postgres

<span class="c"># spawn a container</span>
docker run <span class="nt">--name</span> bigger_banner <span class="nt">-e</span> <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres <span class="nt">-it</span> <span class="nt">-p</span> 5432:5432 <span class="nt">-v</span> data_lake:/var/lib/postgresql/data/ postgres:latest
</code></pre></div></div> <p>Here, we map the volume <code class="language-plaintext highlighter-rouge">data_lake</code> to the postgres default installation directory. Now, we can spin a separate container with the volume <code class="language-plaintext highlighter-rouge">data_lake</code> mapped to <code class="language-plaintext highlighter-rouge">/var/lib/postgresql/data/</code> and now the new container can access postgres although they are two separate instances.</p> <h3 id="setting-up-vscode-environment">Setting up VSCode environment</h3> <p>Useful extensions :</p> <ul> <li>Docker - orchestrates the docker containers</li> <li>devcontainers.io : to open the container in VSCode</li> </ul>]]></content><author><name></name></author><category term="Setup"/><category term="tech"/><category term="framework"/><category term="setup"/><summary type="html"><![CDATA[My notes on creating a docker image, spinning up containers and using docker volumes.]]></summary></entry><entry><title type="html">Generating Realistic Stock Market Order Streams - A Summary</title><link href="https://deepakgouda.github.io/blog/2021/stockgan/" rel="alternate" type="text/html" title="Generating Realistic Stock Market Order Streams - A Summary"/><published>2021-05-29T21:01:00+00:00</published><updated>2021-05-29T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2021/stockgan</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2021/stockgan/"><![CDATA[<h2 id="terminologies-and-pre-requisite-knowledge">Terminologies and Pre-requisite knowledge</h2> <ul> <li><a href="https://arxiv.org/abs/1406.2661">Generative Adversarial Networks(GAN)</a></li> <li><a href="https://arxiv.org/abs/1701.07875">Wasserstein GAN</a></li> <li>Limit order - the maximum price at which a trader would be willing to buy a specified quantity of a stock, or the minimum price at which they ould be willing to sell a quantity.</li> <li>Best bid - the lowest buy price level.</li> <li>Best ask - the highest sell price level.</li> </ul> <h2 id="introduction">Introduction</h2> <ul> <li>Quant research and strategy development rely on orderbook and tradebook data of financial instruments to backtest and gauge the performance of a strategy.</li> <li>This paper aims to develop a simulator capable of producing market data at high fidelity and high realism, by learning a generator from real stock market data streams.</li> <li>The primary contribution is the architecture and formulation of Stock-GAN, a conditional GAN model based on Wasserstein GAN (WGAN) to produce realistic stock market order streams from real market data.</li> <li>Next contribution is the mathematical characterization of the distribution learned by the generator, which is modeled as a stochastic process with finite memory dependency.</li> <li>The generated data streams are evaluated based on the distributions of five parameters.</li> </ul> <h2 id="architecture-and-mathematical-characterization">Architecture and Mathematical characterization</h2> <ul> <li>Notation \(X\) : vector valued random variable, whose components include the time interval in between orders, type of order, limit order price, limit order quantity and the best bid and best ask prices.</li> <li>A conditional WGAN with both the generator and critic conditioned on a \(k\) length history of \(X\) and the time interval \(Δt\) is used for the architecture. \(k = 20\) is the chosen value.</li> <li>The history is condensed to one vector using a single LSTM layer. This vector and uniform noise of dimension 100 is fed to a fully connected layer followed by 4 convolution layers.</li> <li>When the generator executes after training it is fed its own generated data as history.</li> <li><strong>Stock-GAN novel architectural features</strong> <ol> <li>A separate neural network (CDA network) that is used to approximate the double auction mechanism underlying stock exchanges. It consists of a fully connected layer followed by 3 convolutional layers. Its input is a limit order and the current best bid and best ask and the output is the next best bid and best ask. This network is trained separately using the orders and order-book data using a standard mean squared error loss.</li> <li>Inclusion of order-book information in the conditioning history of the network. The $k$ length history implies a finite history dependence of the current output $$x_i$ i.e.</li> </ol> \[P(x_i | x_{i−1} , ... , Δt) = P(x_i | x_{i−1} , ... , x_{i−m} , Δt)\] <p>for some <em>m</em> which is modelled as a higher order Markov Chain. As the modelled stochastic process cannot be described in a closed form, a neural network is used to learn this complex stochastic process.</p> </li> <li><strong>Mathematical interpretations</strong> <ol> <li>The critic computes the Wasserstein distance between the joint distributions</li> </ol> \[P_{r}(x_{i}, ... , x_{i−k}, Δt)\text{ and }P_{g}(x_{i}, ... , x_{i−k} , Δt)\] <ol> <li>The generator represents the distribution</li> </ol> \[P_{g}(x_{i}, ... , x_{i−k} , Δt) = P_{g} (x_{i} | x_{i−1} , ... , x_{i−k} , Δt)P_{r}(x_{i−1} , ... , x_{i−k} , Δt)\] <p>where subscript <em>r</em> denotes distributions on real data and <em>g</em> denotes distributions on generated data.</p> </li> </ul> <p><img src="./images/StockGAN.png" alt=""/></p> <h2 id="evaluation">Evaluation</h2> <p>The five proposed statistics to evaluate the fidelity of generated data are :</p> <ol> <li>Price: Distribution over price for the day’s limit orders, by order type.</li> <li>Quantity: Distribution over quantity for the day’s limit orders, by order type.</li> <li>Inter-arrival time: Distribution over inter-arrival duratio for the day’s limit orders, by order type.</li> <li>Intensity evolution: Number of orders for consecutive T-second chunks of time.</li> <li>Best bid/ask evolution: Changes in the best bid and ask over time as new orders arrive.</li> </ol> <ul> <li>The baseline distributions are generated using Variational Autoencoders and Deep Conditional GANs. The evaluation statistic used is Kolmogorov-Smirnoff distance.</li> <li>Ablation studies were performed by removing CDA network and orderbook information. Removing these two features lead to fewer high frequency components in comparison to synthetic data. Removing the CDA network leads to more high frequency components in comparison to real data.</li> </ul> <h2 id="limitations">Limitations</h2> <ul> <li>The time intervals chosen are for shorter durations only which can capture regular movements over a short interval. Accordingly, the evaluation data chosen is exclusive of external factors such as quarterly or annual financial performance reports.</li> </ul> <h2 id="paper-and-code">Paper and Code</h2> <ul> <li><a href="https://ojs.aaai.org//index.php/AAAI/article/view/5415">Paper</a></li> <li><a href="https://openreview.net/pdf?id=rke41hC5Km">Code Snippets</a></li> </ul>]]></content><author><name></name></author><category term="Research"/><category term="research"/><category term="notes-and-summaries"/><category term="machine-learning"/><summary type="html"><![CDATA[A summary of StockGANs - a market data simulator]]></summary></entry><entry><title type="html">Capturing Nights of Spiti</title><link href="https://deepakgouda.github.io/blog/2021/spiti/" rel="alternate" type="text/html" title="Capturing Nights of Spiti"/><published>2021-05-22T21:01:00+00:00</published><updated>2021-05-22T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2021/spiti</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2021/spiti/"><![CDATA[<p>In the April of this year (2021), I travelled to the Spiti valley in Himanchal Pradesh (India) along with four of my friends. Spiti, a cold desert is known for its massive rugged mountains, high altitude villages, snow leopards and clear night skies. I list out my notes and methodology to capture and present the night sky.</p> <h2 id="1-my-gear">1. My gear</h2> <p>I own a <a href="https://www.nikonusa.com/en/nikon-products/product/dslr-cameras/d5300.html"><em>Nikon D5300</em></a>. It’s apt for entry level photography and fashions a DX Image sensor. I pair my camera with an AF-P DX NIKKOR 18-55 mm lens and a 70-300 mm telephoto lens. I find myself clicking landscapes more often and while the wide angle 18-55 captures the massive dunes and skies perfectly, I have most fun with the telephoto lens. I also own the <a href="https://www.digitek.net.in/product/DIGITEK%20Lightweight%20Tripod%20DTR%20550LW"><em>Digitek DTR 550 LW</em></a> tripod. It takes up the load of a DSLR paired with 300 mm telephoto lens and is light enough (1.5 KGs) to be carried up in long treks or hikes.</p> <p>Get a 32 GB SD card at least. For a 10 second timelapse at 30 fps, my camera takes up 6.6 GB of RAW images. Carry extra batteries as shoot times can stretch to hours.</p> <p><em>Note : For long exposures and timelapses, tripod is a necessity.</em></p> <h2 id="2-planning-the-shoot-timings">2. Planning the shoot timings</h2> <p>The night sky and milky way is highly sensitive to light pollution. Have a look at the <a href="https://www.lightpollutionmap.info/">light pollution map</a> before planning on astrophotography at a new location. Apart from light pollution, the phases of moon affect your timings and chances of a bright and immaculate sky.</p> <p>Unfortunately my restricted travel dates pushed me into the full moon phase and I had pretty limited time to capture the sky in between 8 PM when the sky isn’t dark enough to 9:45 PM when the moon is up and washes away the fine dotted photon rays travelling for millions of years escaping gravity in the hope of getting captured by a guy standing on top of a cold windy roof in a pale blue dot.</p> <p>Also look up for the weather forecasts as clouds will cover up any chances of you catching the arms of a galaxy.</p> <p>At times I like to think how lucky of our ancient predecessors to devour the sight of a million brilliant lights every night embellished with pink and purple hues, drawing all kinds of tortuous shapes and just resting under the skies, without going through a lot of planning and preparation :)</p> <h2 id="3-shooting-steps">3. Shooting steps</h2> <p>Switch the DSLR into manual mode. Clicking the night sky requires a lot of light and hence, lower <em>f values</em> and higher shutter exposure times. Although I prefer keeping low ISO values to diminish noise, at times I crank it up to 3200.</p> <h4 id="how-to-setup-manual-focus">How to setup manual focus?</h4> <p>Switch to manual focus mode and open up the live view. Zoom into the brightest star you can see and start adjusting the focal ring to get a crisp image. Once achieved, zoom out and freeze the setup.</p> <h4 id="500-rule">500 Rule</h4> <p>While clicking images with a shutter speed of the magnitude of 15-30 seconds, the images start capturing the star trails. We do not want the trails in a single image as it distorts the clarity of stars and unless blended with other images to show the complete motion, hold no real value.</p> <p>500 Rule is a thumb rule to find the optimal shutter speed to avoid star trails. It states that, 500/(crop factor <em>focal length) should be the optimal shutter speed. For instance, my Nikon DSLR with a DX sensor has a crop factor of 1.5x and hence, for a focal length of 18 mm, my shutter speed should be 500/(18</em>1.5) ~ 18.5 seconds.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/red_trails-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/red_trails-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/red_trails-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/red_trails.jpg" data-zoomable=""/> </picture> </figure> </div> <p>For a subjective art like photography, I do not prefer to go by standard rules, but I state it here just as a rough estimation. After clicking a shot I zoom in to check any trails and adjust my shutter speed accordingly.</p> <h4 id="calculating-waiting-time">Calculating waiting time</h4> <p>More frames in a video implies more fluid experience. I like to keep my videos a minimum of 24 fps and preferably 30 fps (the more the better, but I haven’t been able to click more than 480 frames at one stretch yet). To create a 10 second time lapse at 30 fps, you need to capture a minimum of 300 images spaced uniformly by a constant time delay. The time delay has to be longer than your shutter speed, otherwise you won’t have enough time to take the shot itself.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/blue_glare-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/blue_glare-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/blue_glare-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/blue_glare.jpeg" data-zoomable=""/> </picture> </figure> </div> <h4 id="exif">EXIF</h4> <ul> <li>Focal length : 18 mm</li> <li>ISO : 3200</li> <li>F-stop : f/3.5</li> <li>Shutter : 10 sec</li> </ul> <p>In the above image, the shutter speed was 10 seconds and hence, the time delay had to be more than that and I fixed a 20 second delay. To be on the safer side in case I lose any frames to sudden light flashes, I target a higher number of frames. For instance, to get 300 frames at a 20 second time interval, you need 6000 seconds which is 1 hour 40 minutes at least. You can also space out even longer to get more motion at the cost of more time.</p> <h2 id="4-making-the-timelapse">4. Making the timelapse</h2> <p><em>Note : I use Photoshop CC 2018 for most of the post-processing. It has been used in all of the steps mentioned here</em></p> <p>Once you have all of the frames, I prefer to weed out overexposed or frames and do some HSV corrections and image tuning like exposure, temperature, highlights and shadows.</p> <h4 id="initial-image-edits-and-conversion-to-jpeg">Initial image edits and conversion to jpeg</h4> <ul> <li>To edit all of the images at once, select all of them and drag them into the title bar of photoshop. This will pop up the RAW image interface.</li> </ul> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/edit_window-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/edit_window-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/edit_window-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/edit_window.jpg" data-zoomable=""/> </picture> </figure> </div> <ul> <li>Once the necessary adjustments are done, select all and sync the settings.</li> </ul> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/save_images-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/save_images-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/save_images-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/save_images.jpg" data-zoomable=""/> </picture> </figure> </div> <ul> <li>Save all images as jpeg in a separate folder and with a serial numbering as depicted. Preferably keep an sRGB colorspace as it is the standard setting for videos.</li> </ul> <h4 id="stitching-images-into-a-video">Stitching images into a video</h4> <ul> <li>Load all images by File -&gt; Open -&gt; /path/to/folder. Select first image only and check the Image Sequence checkbox. Now open and set the fps.</li> <li>In case you do not have the timeline window, turn it up by Window -&gt; Timeline.</li> </ul> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/timeline-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/timeline-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/timeline-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/timeline.jpg" data-zoomable=""/> </picture> </figure> </div> <ul> <li>Now in the timeline window, you can play the frames as a video. You can add an audio track as well and sync the audio and video by trimming the bars.</li> <li>To set a standard image size i.e. 1080p or 4K, go to Image -&gt; Image Size and resize the image.</li> </ul> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/image_size-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/image_size-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/image_size-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/image_size.jpg" data-zoomable=""/> </picture> </figure> </div> <ul> <li>Click on the render button in timeline window and there you have your timelapse.</li> </ul> <h2 id="5-stacking-to-form-the-trails">5. Stacking to form the trails</h2> <p>You can also get the more dramatic and wow-inducing star trails in an image. Effectively, you stack up all the images in a sequential order to capture the motion of the stars.</p> <p>This process is relatively short and simple. To open the images in a stack, File-&gt;Scripts-&gt;Load files into stack.</p> <p>You will get all of the frames in the Layers dash.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/open_stack-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/open_stack-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/open_stack-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/open_stack.jpg" data-zoomable=""/> </picture> </figure> </div> <p>In layers dashboard, select all of the frames and switch to <em>Lighten</em>, instead of the default <em>Normal</em> layering setting.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source media="(max-width: 480px)" srcset="/assets/img/spiti/axial_trails-480.webp"/> <source media="(max-width: 800px)" srcset="/assets/img/spiti/axial_trails-800.webp"/> <source media="(max-width: 1400px)" srcset="/assets/img/spiti/axial_trails-1400.webp"/> <img class="img-fluid rounded z-depth-1" src="/assets/img/spiti/axial_trails.jpeg" data-zoomable=""/> </picture> </figure> </div> <p>Voila! You got your image stack.</p>]]></content><author><name></name></author><category term="Photography"/><category term="travel"/><category term="photography"/><summary type="html"><![CDATA[My notes on capturing and presenting the stars at Spiti]]></summary></entry><entry><title type="html">Why rand() is bad?</title><link href="https://deepakgouda.github.io/blog/2021/rand/" rel="alternate" type="text/html" title="Why rand() is bad?"/><published>2021-05-20T21:01:00+00:00</published><updated>2021-05-20T21:01:00+00:00</updated><id>https://deepakgouda.github.io/blog/2021/rand</id><content type="html" xml:base="https://deepakgouda.github.io/blog/2021/rand/"><![CDATA[<h4 id="notation-">Notation :</h4> <ul> <li><em>[a, b] - implies the range of integers from a to b inclusive.</em></li> <li><em>LGC - Linear Congruential Generators</em></li> </ul> <h2 id="using-rand">Using rand()</h2> <p>Let’s give an example of generating 16 numbers in the range [0, 99].</p> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;time.h&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">srand</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">16</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="n">rand</span><span class="p">()</span> <span class="o">%</span> <span class="mi">100</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <p>A seemingly innocuous code with no visible syntactical or logical fallacies. Let’s dive into each one of the functions and variables.</p> <ul> <li><code class="language-plaintext highlighter-rouge">time(NULL)</code> : <ol> <li>In C (and also C++), <code class="language-plaintext highlighter-rouge">NULL</code> is <code class="language-plaintext highlighter-rouge">0</code> and it’s an integer. Hence, it has a high tendency to cause unintended function overloads and lead to ambiguous code. Use <code class="language-plaintext highlighter-rouge">nullptr</code> instead(from C++11).</li> <li><code class="language-plaintext highlighter-rouge">time</code> runs once every second. Run the code more than once in a second, and now you can replicate the seed.</li> </ol> </li> <li><code class="language-plaintext highlighter-rouge">srand(time(NULL))</code> : <code class="language-plaintext highlighter-rouge">time()</code> returns a 64-bit <code class="language-plaintext highlighter-rouge">time_t</code>, while <code class="language-plaintext highlighter-rouge">srand()</code> accepts 32-bit <code class="language-plaintext highlighter-rouge">unsigned int</code>. Hence, a loss of precision here and potentially vulnerable.</li> <li><code class="language-plaintext highlighter-rouge">rand()</code> : <ol> <li>It has a range of [0, 32767] (2<sup>15</sup>-1). That is awfully small for several use cases today. For instance, you cannot sample data from a dataset of size &gt; 32767 and we deal with hundreds of thousands of data rows easily.</li> <li>it uses <a href="https://en.wikipedia.org/wiki/Linear_congruential_generator">Linear Congruential Generators</a> for pseudo-random number generation and if the parameters, namely modulus(<code class="language-plaintext highlighter-rouge">m</code>), multiplier(<code class="language-plaintext highlighter-rouge">a</code>) and increment(<code class="language-plaintext highlighter-rouge">c</code>) do not obey <a href="https://en.wikipedia.org/wiki/Linear_congruential_generator#Period_length">certain conditions</a>, the generated numbers do not acheive a periodicity of <code class="language-plaintext highlighter-rouge">m</code> and hence, not a uniform distribution.</li> <li>In higher dimensions, LGCs lie on well-defined hyperplanes(<a href="https://en.wikipedia.org/wiki/Marsaglia%27s_theorem">Marsaglia’s Theorem</a>). Not something you want in an internet facing code.</li> </ol> </li> <li><code class="language-plaintext highlighter-rouge">rand()%100</code> : <code class="language-plaintext highlighter-rouge">rand()</code> has a range of [0, 32767]. The length is not a multiple of 100 and if you split the range into buckets of 100, you get 32700 buckets of equal length 100 and one incomplete bucket of length 68 i.e.[0, 67]. Repeat the numbers long enough and the frequency of the first 68 numbers will be higher than the rest.</li> </ul> <hr/> <h2 id="introducing-random">Introducing &lt;random&gt;</h2> <p>Starting from C++11, provides the <code class="language-plaintext highlighter-rouge">random</code> header which hosts and bunch of random distributions and clean way to draw samples from them as well. The distributions I tend to encounter most are :</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>uniform_int_distribution
uniform_real_distribution
bernoulli_distribution
poisson_distribution
normal_distribution
</code></pre></div></div> <p>Complete list available <a href="https://www.cplusplus.com/reference/random/">here</a>.</p> <p>Coming back to the pseudo-random number generation problem, our task is to draw integer samples from a uniform distribution in the range <code class="language-plaintext highlighter-rouge">[0, 99]</code>. This time we can use <code class="language-plaintext highlighter-rouge">uniform_int_distribution</code>. To draw samples from the above distribution, we need to provide a Random Number Engine (LGC being one). This time, instead of LGC, we use <a href="https://www.cplusplus.com/reference/random/mersenne_twister_engine/"><code class="language-plaintext highlighter-rouge">mersenne_twister_engine</code></a>. Further, unlike <code class="language-plaintext highlighter-rouge">srand()</code> to set a seed, let’s use <a href="https://en.cppreference.com/w/cpp/numeric/random/random_device"><code class="language-plaintext highlighter-rouge">random_engine</code></a> which produces uniformly distributed non-deterministic random numbers.</p> <p>The new code snippet is as follows:</p> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;random&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">random_device</span> <span class="n">rd</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">mt19937</span> <span class="n">mt</span><span class="p">(</span><span class="n">rd</span><span class="p">());</span> <span class="c1">// Can be supplied with static seeds like any non-negative integral value</span>
    <span class="n">std</span><span class="o">::</span><span class="n">uniform_real_distribution</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dist</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">99</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">16</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dist</span><span class="p">(</span><span class="n">mt</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <p>We’ll start with <code class="language-plaintext highlighter-rouge">std::mt19937</code> first and come to <code class="language-plaintext highlighter-rouge">random_device</code> later.</p> <ul> <li><code class="language-plaintext highlighter-rouge">std::mt19937</code> : <ol> <li>Creates a random number generation engine based on <a href="https://en.wikipedia.org/wiki/Mersenne_twister">Mersenne Twister Algorithm</a></li> <li>Its periodicity is 2<sup>19937</sup> i.e. its range is [0, 2<sup>19937</sup>-1]. That’s absolutely massive.</li> <li>It is faster than true random methods (like <code class="language-plaintext highlighter-rouge">random_device</code> which rely on hardware devices)</li> <li>Passes several statistical tests for randomness including <a href="https://en.wikipedia.org/wiki/Diehard_tests">Diehard Tests</a>.</li> <li>Not cryptographically secure.</li> </ol> </li> <li><code class="language-plaintext highlighter-rouge">std::uniform_real_distribution&lt;double&gt; dist(a, b)</code> : <ol> <li>Passing the engine to dist, we want numbers in the range [a, b].</li> <li>Works on <code class="language-plaintext highlighter-rouge">signed/unsigned short/int/long/long long</code>, but not on <code class="language-plaintext highlighter-rouge">char</code>.</li> </ol> </li> <li><code class="language-plaintext highlighter-rouge">std::random_device</code> : <ol> <li>Can be used to set 32-bit and higher seeds.</li> <li>It is non-seedable and hence non-reproducible.</li> <li>It is slower than Mersenne-Twister.</li> </ol> </li> </ul> <h5 id="acknowledgement"><em>Acknowledgement</em></h5> <p>The code-snippets and analysis have been derived from the <a href="https://learn.microsoft.com/en-us/events/goingnative-2013/rand-considered-harmful">talk by Stephan T. Lavavej</a> and the intention of this article is to provide an abridged version in readable format for future reference.</p>]]></content><author><name></name></author><category term="CPP"/><category term="tech"/><category term="language"/><category term="cpp"/><summary type="html"><![CDATA[Why you should not use rand() and use]]></summary></entry></feed>